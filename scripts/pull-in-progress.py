#!/usr/bin/python
# Copyright 2008 Canonical, Ltd.
# Author: Jamie Strandboge <jamie@canonical.com>
# License: GPLv3
#
#
import sys, os, os.path, re, urllib
import optparse, glob
import cve_lib
from launchpadbugs.connector import ConnectBugList
from launchpadbugs.connector import ConnectBug
Bug = ConnectBug()
BugList = ConnectBugList()

if not cve_lib.read_config():
    print "Aborting"
    sys.exit(1)

parser = optparse.OptionParser()
parser.add_option("-u", "--update", dest="update", help="Update CVEs with released package versions", action='store_true')
parser.add_option("-v", "--verbose", dest="verbose", help="Report logic while processing USNs", action='store_true')
(opt, args) = parser.parse_args()

BugList.authentication = cve_lib.config["plb_authentication"]

url = "https://launchpad.net/~ubuntu-security/+subscribedbugs?field.searchtext=&orderby=-importance&field.status%3Alist=INPROGRESS&field.omit_dupes.used=&field.omit_dupes=on&field.has_patch.used=&field.has_patch=on&field.has_cve.used=&field.has_cve=on"

def scrape_cves(burl):
    '''Try to screen-scrape the CVEs from the LP CVE References <div>'''
    page = urllib.urlopen(burl).read()
    in_cves = False
    cves = []
    for line in page.split("\n"):
        if "<h2>CVE References</h2>" in line:
            in_cves = True

        if not in_cves:
            continue

        if "</div>" in line:
            in_cves = False
            continue

        if "href" in line:
            tmp = re.sub('"', '', line).split('/')
            cve = "CVE-%s" % (tmp[len(tmp)-1])
            if re.match(r'^CVE-\d+-\d+$', cve):
                cves.append(cve)

    return cves

blist = BugList(url)

for binfo in blist:
    bug = Bug(binfo.bugnumber)
    bug_url = "http://launchpad.net/bugs/%s" % (binfo.bugnumber)
    bug_cves = scrape_cves(bug_url)

    pkg = binfo.sourcepackage.split()[0]
    if not re.match(r'^[a-z0-9][a-z0-9+\.\-]+$', pkg):
        print >>sys.stderr, "Bad package name '%s'" % (pkg)
        continue

    for a in bug.attachments:
        if a.id != "" and a.lp_filename != "" and \
           ("diff" in a.lp_filename or "patch" in a.lp_filename):
            type = "patch"
            if "debdiff" in a.lp_filename:
                type = "debdiff"

            print "%s" % (binfo.sourcepackage)
            print "  %s" % (bug_url)
            if opt.verbose:
                print "  %s" % (binfo.summary)

            print "  CVES:",
            for c in bug_cves:
                print "%s" % (c),
                filename = "active/%s" % (c)
                if opt.update and os.path.exists(filename):
                    cve_lib.add_patch(filename, pkg, bug_url, type)
            print "\n"
            break

