#!/bin/bash
# Copyright (C) 2018 Canonical Ltd.
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 2 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.

# Generate and push to the influxdb the number of USNs published over team for
# each release, along with the unique nimber of cves mentioned in those USNs
# for each release

set -e

. "$HOME"/.ubuntu-cve-tracker.conf

echo "Checking we can resolve influxdb hostname..."
nslookup influxdb.security.kpi.internal 1>/dev/null 2>&1 || (echo "Unable to resolve host influxdb.security.kpi.internal - you must be connected to the Canonical VPN to use this script." && exit 1)

# poll influxdb to find last day with data - use the readonly user and password
echo "Polling influxdb for most recent date..."
LASTDAY=$(http_proxy=; curl -s -G "http://influxdb.security.kpi.internal:8086/query?db=security&u=securityro&p=ainoNgoh2hohseevoo0zeic3iedew9Oo" --data-urlencode "q=SELECT \"usns\" FROM \"published_usns\" GROUP BY * ORDER BY DESC LIMIT 1" | grep -o "[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}" || true)

if [ -z $LASTDAY ]; then
  # 2 years ago seems long enough
  LASTDAY="2016-01-01"
fi
LASTDAY_SECS=$(date +%s -d "$LASTDAY")
TODAY_SECS=$(date +%s -d $(date +%Y-%m-%d))
DIFF_SECS=$((TODAY_SECS - LASTDAY_SECS))
DAYS=$((DIFF_SECS / 86400))

echo "Generating and pushing data from last $DAYS days..."

PASSWORD=${influxdb_security_password}
while [ -z "$PASSWORD" ]; do
  echo -n "Enter password for user 'security' influxdb: "
  read -r -s PASSWORD
  # newline after password
  echo ""
done

pushd "${UCT:-/home/ubuntu-security/git-pulls/cve-tracker}"
./scripts/fetch-db database.pickle
while [[ $DAYS -gt 0 ]]; do
  QUERYDATE=$(date --date="today -$DAYS day" +%Y-%m-%d)
  DAYS_1=$((DAYS - 1))
  TZ=UTC
  for release in precise trusty vivid wily xenial yakkety zesty artful bionic; do
    DATA=$(./scripts/report-fixed-cves.py -r $release --before=$(date +%s -d $QUERYDATE) -s | tail -n1 | awk -v timestamp="$(date +%s -d $QUERYDATE)" -v release=$release '{print "published_usns,release=" release " usns=" $1 " " timestamp "\npublished_usns,release=" release " cves=" $4 " " timestamp ; }')
    echo "Pushing data \"$DATA\" for $QUERYDATE..."
    RESPONSE=$(http_proxy=; curl -s -o /dev/null -w "%{http_code}" -i -XPOST "http://influxdb.security.kpi.internal:8086/write?db=security&u=security&p=$PASSWORD;precision=s" --data-binary "$DATA")
    if [ "$RESPONSE" != 204 ]; then
      echo "Failed to push data: $RESPONSE"
      exit 1
    fi
  done                                                                       #
  DAYS=$DAYS_1
done
popd

