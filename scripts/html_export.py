#!/usr/bin/python

# Author: Kees Cook <kees@ubuntu.com>
# Author: Jamie Strandboge <jamie@ubuntu.com>
# Copyright (C) 2005-2008 Canonical Ltd.
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 2 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.

import sys
import re
import cve_lib
from urllib import quote
from cgi import escape
from time import gmtime, strftime

# FIXME: detect and safely quote URLs

releases = cve_lib.releases
for eol in cve_lib.eol_releases:
    if eol in releases:
        releases.remove(eol)

def html_header(title, description, outfd):
    print >>outfd, '''<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>%s in Ubuntu</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="author" content="Canonical Ltd, and others" />
<meta name="description" content="%s" />
<meta name="copyright" content="Canonical Ltd, and others" />
<link rel="StyleSheet" href="../toplevel.css" type="text/css" />
</head>

<body>
''' % (escape(title), quote(description))


def htmlize_cve(cvefile, outfd):
    data = cve_lib.load_cve(cvefile)

    is_retired = False
    if re.match('^retired/',cvefile):
        is_retired = True

    #import pprint
    #pp = pprint.PrettyPrinter(indent=4)
    #pp.pprint(data)

    cve = data['Candidate']

    html_header('%s in Ubuntu' % (cve), 'Ubuntu CVE Entry', outfd)

    # CVE cross links
    heading = quote(cve)
    if is_retired:
        heading += ' (retired)'
    print >>outfd, '<h2 class="cve">%s</h2>' % (heading)

    # Handle "free-form" text
    for field in ['Priority','Description','Ubuntu-Description','References','Bugs','Notes','Assigned-to']:
        if not data.has_key(field):
            continue
        text = data[field].strip()
        if len(text) == 0:
            continue

        escaped_body = ""
        for line in text.split('\n'):
            if (field == "References" or field == "Bugs") and re.match('^http[s]?://', line):
                escaped_body += '<a href="%s">%s</a><br />' % (quote(escape(line), ':/?&;='), escape(line))
            else:
                escaped_body += '%s<br />' % (escape(line))

        value_class = "value"
        if field == 'Notes':
            value_class = 'notes-value'


        if field == "Priority":
            escaped_body = escaped_body.capitalize()
            if escape(line).lower() == "negligible":
                value_class = "negligible-value"
            elif escape(line).lower() == "low":
                value_class = "low-value"
            elif escape(line).lower() == "medium":
                value_class = "medium-value"
            elif escape(line).lower() == "high":
                value_class = "high-value"
            elif escape(line).lower() == "critical":
                value_class = "critical-value"
            else:
                value_class = "value"

        print >>outfd, '<div class="item"><div class="field">%s</div> <div class="%s">%s</div></div>' % (escape(field),value_class,escaped_body)

    # Handle package logic
    for pkg in data['pkgs']:
        print >>outfd, '<div class="pkg">'
        print >>outfd, '<div class="field">Package</div><div class="value">Source: ' + \
            '<a href="http://people.ubuntu.com/~ubuntu-security/cve/pkg/%s.html">%s</a> ' % (quote(pkg),escape(pkg)) + \
            '(' + \
            '<a href="https://launchpad.net/distros/ubuntu/+source/%s">LP</a> ' % (quote(pkg)) + \
            '<a href="http://packages.ubuntu.com/search?suite=all&amp;section=all&amp;arch=any&amp;searchon=sourcenames&amp;keywords=%s">Ubuntu</a> ' % (quote(pkg)) + \
            '<a href="http://packages.qa.debian.org/%s">Debian</a>' % (quote(pkg)) + \
            ')</div>'

        print >>outfd, '<table>'

        release_list = ['upstream'] + releases
        for release in release_list:
            relname = release

            if relname == cve_lib.devel_release:
                release = 'devel'

            if not data['pkgs'][pkg].has_key(release):
                continue

            status = data['pkgs'][pkg][release][0]
            notes  = data['pkgs'][pkg][release][1]

            name = '%s' % (escape(relname).capitalize())
            if status != 'DNE' and relname != 'upstream':
                name = '<a href="https://launchpad.net/ubuntu/%s/+source/%s">%s</a>' % (quote(relname),quote(pkg),escape(relname).capitalize())

            status_class = "default"
            if status in ['needed','active','deferred']:
                status_class = "vuln"
            elif status == 'released' or status == 'not-affected' or status == "DNE":
                status_class = "safe"
            elif status == 'pending':
                status_class = "pending"

            print >>outfd, '<tr><td>%s:</td><td><span class="%s">%s</span>' % (name, status_class, status)
            if len(notes):
                print >>outfd, '(%s)' % (escape(notes))
            print >>outfd, '</td></tr>'
        print >>outfd, '</table>'

        patches = 'Patches_%s' % (pkg)
        if data.has_key(patches):
            entries = data[patches]
            if entries != "":
                print >>outfd, '<div class="patches">Patches:</div>'
                print >>outfd, '<table>'
            for patch in entries.split('\n'):
                if not ':' in patch:
                    continue
                source, url = patch.split(':',1)
                if re.match('^\s*(ftp|http)[s]?://', url):
                    print >>outfd, '<tr><td>%s:</td><td><a href="%s">%s</a></td></tr>' % (escape(source).capitalize(),quote(url),escape(url))
                else:
                    print >>outfd, '<tr><td>%s:</td><td>%s</td></tr>' % (escape(source).capitalize(),escape(url))
            if entries != "":
                print >>outfd, '</table>'
        print >>outfd, '</div>'

    print >>outfd, '<div class="item">'
    print >>outfd, '<div class="field">More Information</div>'
    print >>outfd, '<ul class="links"><li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=%s">Mitre</a></li><li><a href="http://nvd.nist.gov/nvd.cfm?cvename=%s">NVD</a></li><li><a href="https://launchpad.net/bugs/cve/%s">Launchpad</a></li><li><a href="http://security-tracker.debian.net/tracker/%s">Debian</a></li></ul>' % (quote(cve),quote(cve),quote(cve),quote(cve))
    print >>outfd, '</div>'

    print >>outfd, '<div id="footer">'
    print >>outfd, '&copy; Canonical Ltd. 2007-%s' % (strftime("%Y", gmtime()))
    print >>outfd, '</div>'
    print >>outfd, '''</body>
</html>
'''

def htmlTableHeader():
    header = '<tr><th>CVE</th>'
    for rel in releases:
        name = rel
        header += "<th>%s</th>" % (name.capitalize())
    #header += '<th>Links</th><th>Notes</th></tr>'
    return header

def htmlize_package(outfd, pkg, cvefiles):
    html_header('%s CVEs in Ubuntu' % (pkg), 'Ubuntu Package CVE Entry', outfd)

    print >>outfd, '<h2 class="pkg">%s</h2>' % (quote(pkg))

    if len(cvefiles) == 0:
        print >>outfd, '<div class="item"><div class="field">%s</div> <div class="%s">%s</div></div>' % ('Status','value','No known public CVEs')
    else:
        print >>outfd, '<table>' + htmlTableHeader()
        for cvefile in cvefiles:
            data = cve_lib.load_cve(cvefile)
            try:
                priority = data['Priority']
            except:
                priority = 'untriaged'
            print >>outfd, '<tr class="%s">' % (quote(priority)),
            # fields...
            # 'pkgs' -> dict(  pkg -> dict(  release ->  (state, notes)   ) )
            cve = data['Candidate']
            print >>outfd, '<td class="cve"><a href="http://people.ubuntu.com/~ubuntu-security/cve/%s">%s</a></td>' % (quote(cve), escape(cve)),
            for rel in releases:
                if rel == cve_lib.devel_release:
                    rel = 'devel'
                if data['pkgs'][pkg].has_key(rel):
                    pkgstatus = data['pkgs'][pkg][rel][0]
                    pkgclass = pkgstatus
                    if pkgclass == 'DNE':
                        pkgstatus = '---'
                    print >>outfd, '<td class="%s">%s</td>' % (quote(pkgclass), escape(pkgstatus)),
                else:
                    print >>outfd, '<td class="DNE">--</td>',
            print >>outfd, '</tr>'
        print >>outfd, '</table>'

    print >>outfd, '<div id="footer">'
    print >>outfd, '&copy; Canonical Ltd. 2007-%s' % (strftime("%Y", gmtime()))
    print >>outfd, '</div>'
    print >>outfd, '''</body>
</html>
'''
