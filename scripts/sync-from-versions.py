#!/usr/bin/python
# Copyright 2007 Canonical, Ltd.
# Author: Kees Cook <kees@ubuntu.com>
# License: GPL
#
# This script will load the package versions from the current devel release
# and scan for any upstream_PKG versions that have been exceeded, and then
# mark the devel_PKG as not-affected.
#
import sys, os, os.path
import optparse, glob

import cve_lib
import source_map

import warnings
warnings.filterwarnings('ignore', 'apt API not stable yet', FutureWarning)
import apt

devel = 'hardy'

parser = optparse.OptionParser()
parser.add_option("-u", "--update", dest="update", help="Update CVEs with released package versions", action='store_true')
(opt, args) = parser.parse_args()

pkgs = source_map.load()

cves = glob.glob('active/CVE-*')
if os.path.islink('embargoed'):
    cves += glob.glob('embargoed/CVE-*')
    cves += glob.glob('embargoed/EMB-*')

for filename in cves:
    cve = os.path.basename(filename)
    ret, data = cve_lib.load_cve(filename)
    if ret != cve_lib.EXIT_OKAY:
        print >>sys.stderr, "Could not load %s" % (filename)
        continue
    for src in data['pkgs']:
        if data['pkgs'][src].has_key('devel') and data['pkgs'][src].has_key('upstream'):
            upstream_state, upstream_notes = data['pkgs'][src]['upstream']
            # Skip bad released versions
            if upstream_state != 'released' or upstream_notes == "" or ' ' in upstream_notes or ',' in upstream_notes:
                continue

            state, notes = data['pkgs'][src]['devel']
            if not state in ['released','DNE','not-affected'] and pkgs[devel].has_key(src) and apt.VersionCompare(upstream_notes, pkgs[devel][src]['version']) < 0:

                print '%s: %s upstream (%s) < %s (%s)' % (cve, src, upstream_notes, devel, pkgs[devel][src]['version'])

                if opt.update:
                    cve_lib.update_state(filename,src,'devel','not-affected',pkgs[devel][src]['version'])
                    pass
