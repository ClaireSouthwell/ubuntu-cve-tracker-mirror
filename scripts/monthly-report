#!/bin/bash
# Copyright (C) 2008-2009 Canonical, Ltd.
# Author: Kees Cook <kees@ubuntu.com>
# Author: Jamie Strandboge <jamie@ubuntu.com>
# License: GPLv3
#
# This script attempts to build up statistics for a monthly report on
# security update activity on USNs, triage, and outstanding tasks.
# It is designed to be run on the month _following_ the month one wants
# a report for. e.g. run this script in April if you want the March report.
#
# By default, report in a more prose-style. E.g.:
#  The security team had a busy month. We published 29 Ubuntu Security
#  Notices which fixed 63 security issues (CVEs) across 30 supported
#  packages. Additionally, we triaged 487 public security vulnerability
#  reports, weeding out only those that applied to Ubuntu.
#
#  For all the supported packages in Ubuntu, there are 67 medium-priority
#  issues and 206 low issues that need to be fixed in 142 packages.
#
#  For all partner packages in Ubuntu, there is 1 medium-priority issue
#  that needs to be fixed in 1 package.
#
#  For all community-supported packages in Ubuntu, there are 7 high-priority
#  issues, 721 medium-priority, and 1005 low-priority issues that need to be
#  fixed in 686 packages.
set -e
export LANG=C

# Make sure we won't destroy any pending commits
bzr diff >/dev/null || {
    echo "Aborting: uncommitted changes. Please use 'bzr commit' before proceeding" >&2
    exit 1
}

REP_MON=$(date +%B -d 'last month')
REP_MONN=$(date +%m -d 'last month')
REP_YEAR=$(date +%Y -d 'last month')

THIS_MONN=$(date +%m)
THIS_YEAR=$(date +%Y)

echo "Fetching USN publication list..." >&2
USNS=$(echo $(curl -s https://lists.ubuntu.com/archives/ubuntu-security-announce/$REP_YEAR-$REP_MON/date.html | fgrep '">[USN-'  | cut -d- -f2,3 | cut -d\] -f1))

echo "Fetching USN database..." >&2
if grep -q people ~/.ssh/config; then
    rsync -q -e ssh people.canonical.com:~ubuntu-security/public_html/usn/database.pickle ./database.pickle
else
    wget -qN http://people.canonical.com/~ubuntu-security/usn/database.pickle
fi
PUBLISHED=$(./scripts/report-usn-numbers.py --prose database.pickle $USNS)

# We depend on a script to perform output while the tree is reverted, so
# copy the script out of the tree for later use.
SCRIPTS=$(mktemp -d -t monthly-report-XXXXXX)
for i in report-todo-numbers check-cves cache_urllib.py cve_lib.py source_map.py usn_lib.py
do
    cp -a scripts/$i "$SCRIPTS"/$i
done

TMP1=$(mktemp -t work1-XXXXXX)
TMP2=$(mktemp -t work2-XXXXXX)
TMP1_UBUNTU=$(mktemp -t work1u-XXXXXX)
TMP2_UBUNTU=$(mktemp -t work2u-XXXXXX)
if [ ! -x "scripts/monthly-report" ]; then
    echo "Please run this from the top-level directory of Ubuntu CVE Tracker"
    exit 1
fi

bzr_rewind ()
{
    local changed count

    count=0
    changed="$1"
    while :; do
        bzr revert -r date:"$changed" >/dev/null 2>&1 && break
        changed=$(date +%Y-%m-%d -d "$changed - 1 day")
        count=$(( count + 1 ))
        if [ "$count" -gt 32 ]; then
            echo "Eeek, rewound from $1 past $changed.  Something is wrong."
            exit 1
        fi
    done
    #echo "rewound to $changed"
}


echo "Rewinding bzr tree for stats..." >&2
# Locate the last day something changed
bzr_rewind $(date +%Y-%m-%d -d "$REP_YEAR-$REP_MONN-01 - 1 day")
# Gather stats at the time
$SCRIPTS/check-cves --known > "$TMP1"
$SCRIPTS/check-cves --known --skip-nfu > "$TMP1_UBUNTU"

echo "Fast-forwarding bzr tree for stats..." >&2
# Fast-forward to end of month
bzr revert >/dev/null 2>&1
last_month_end=`date +%Y-%m-%d -d "$THIS_YEAR-$THIS_MONN-01 - 1 day"`
last_month_fn=`date +%B -d "$THIS_YEAR-$THIS_MONN-01 - 1 day"`
bzr_rewind "$last_month_end"
$SCRIPTS/check-cves --known > "$TMP2"
$SCRIPTS/check-cves --known --skip-nfu > "$TMP2_UBUNTU"
WORK=$($SCRIPTS/report-todo-numbers --prose -E -- -S)

echo "Returning bzr tree to present-day..." >&2
# Get back to normal
bzr revert >/dev/null 2>&1

# Calculate difference
TRIAGED=$(diff -u "$TMP1" "$TMP2" | grep '^+CVE' | wc -l)
rm -f "$TMP1" "$TMP2"
FOR_US=$(diff -u "$TMP1_UBUNTU" "$TMP2_UBUNTU" | grep '^+CVE' | wc -l)
rm -f "$TMP1_UBUNTU" "$TMP2_UBUNTU"
rm -rf "$SCRIPTS"

# Report!
echo ""
echo "Add the following template text to https://wiki.canonical.com/UbuntuPlatform/MonthlyReport:"
echo ""
echo "== Security =="
echo "=== Reactive work ==="
echo "In the month of $last_month_fn, the Ubuntu Security team:"
SECTEAM=$(echo "$PUBLISHED" | sed -e 's/We published/Published/')
echo " * $SECTEAM"
echo " * Triaged $TRIAGED public security vulnerability reports, weeding out the $FOR_US that applied to Ubuntu."

echo ""
echo "As of the end of $last_month_fn (${last_month_end}):"
echo "$WORK"

echo ""
echo "=== Proactive highlights ==="
echo " * TO BE FILLED IN"

