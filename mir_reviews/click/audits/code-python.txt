Running: /home/sarnold/bin/audit-code.sh -c python ./
Scanning './'
== subprocess_spawned() ==
./click/preinst.py:35:#! /bin/sh
./click/preinst.py:43:#! /bin/sh
./click/preinst.py:51:#! /bin/sh
./click/tests/test_hooks.py:242:                self.g_spawn_sync_side_effect, {b"/bin/sh": 0})
./click/tests/test_hooks.py:251:                [[b"/bin/sh", b"-c", b"test-update"]], self.spawn_calls)
./click/tests/test_hooks.py:552:                self.g_spawn_sync_side_effect, {b"/bin/sh": 0})
./click/tests/test_hooks.py:561:                [[b"/bin/sh", b"-c", b"test-update"]], self.spawn_calls)
./click/tests/test_install.py:151:                    "preinst": "#! /bin/sh\n",
./click/tests/test_install.py:152:                    "postinst": "#! /bin/sh\n",
./click/chroot.py:333:            print("#!/bin/sh", file=policy)
./click/chroot.py:347:            print("#!/bin/bash", file=finish)
./click/commands/chroot.py:96:        program = ["/bin/bash"]
./click/commands/chroot.py:109:        program = ["/bin/bash"]
./click/tests/test_user.py:78:        with self.run_in_subprocess(
./click/tests/test_user.py:104:        with self.run_in_subprocess(
./click/tests/test_hooks.py:150:        with self.run_in_subprocess(
./click/tests/test_hooks.py:169:        with self.run_in_subprocess(
./click/tests/test_hooks.py:179:        with self.run_in_subprocess(
./click/tests/test_hooks.py:191:        with self.run_in_subprocess(
./click/tests/test_hooks.py:210:        with self.run_in_subprocess(
./click/tests/test_hooks.py:224:        with self.run_in_subprocess(
./click/tests/test_hooks.py:237:        with self.run_in_subprocess(
./click/tests/test_hooks.py:254:        with self.run_in_subprocess(
./click/tests/test_hooks.py:274:        with self.run_in_subprocess(
./click/tests/test_hooks.py:299:        with self.run_in_subprocess(
./click/tests/test_hooks.py:327:        with self.run_in_subprocess(
./click/tests/test_hooks.py:348:        with self.run_in_subprocess(
./click/tests/test_hooks.py:363:        with self.run_in_subprocess(
./click/tests/test_hooks.py:396:        with self.run_in_subprocess(
./click/tests/test_hooks.py:422:        with self.run_in_subprocess(
./click/tests/test_hooks.py:466:        with self.run_in_subprocess(
./click/tests/test_hooks.py:486:        with self.run_in_subprocess(
./click/tests/test_hooks.py:498:        with self.run_in_subprocess(
./click/tests/test_hooks.py:511:        with self.run_in_subprocess(
./click/tests/test_hooks.py:530:        with self.run_in_subprocess(
./click/tests/test_hooks.py:547:        with self.run_in_subprocess(
./click/tests/test_hooks.py:564:        with self.run_in_subprocess(
./click/tests/test_hooks.py:591:        with self.run_in_subprocess(
./click/tests/test_hooks.py:618:        with self.run_in_subprocess(
./click/tests/test_hooks.py:653:        with self.run_in_subprocess(
./click/tests/test_hooks.py:681:        with self.run_in_subprocess(
./click/tests/test_hooks.py:701:        with self.run_in_subprocess(
./click/tests/test_hooks.py:765:        with self.run_in_subprocess(
./click/tests/test_hooks.py:796:        with self.run_in_subprocess(
./click/tests/test_hooks.py:842:        with self.run_in_subprocess(
./click/tests/test_hooks.py:870:        with self.run_in_subprocess(
./click/tests/test_hooks.py:922:        with self.run_in_subprocess(
./click/tests/test_hooks.py:961:        with self.run_in_subprocess(
./click/tests/test_hooks.py:990:        with self.run_in_subprocess(
./click/tests/test_hooks.py:1051:        with self.run_in_subprocess(
./click/tests/test_hooks.py:1105:        with self.run_in_subprocess(
./click/tests/test_hooks.py:1125:        with self.run_in_subprocess(
./click/tests/test_hooks.py:1145:        with self.run_in_subprocess(
./click/tests/test_hooks.py:1164:        with self.run_in_subprocess(
./click/tests/gimock.py:381:    #   with self.run_in_subprocess("func", ...) as (enter, preloads):
./click/tests/gimock.py:386:    def run_in_subprocess(self, *patches):
./click/tests/gimock.py:419:            # It would be cleaner to use subprocess.Popen(pass_fds=[wfd]), but
./click/tests/gimock.py:434:            subp = subprocess.Popen(args, close_fds=False, env=env)
./click/tests/test_install.py:130:        with self.run_in_subprocess(
./click/tests/test_install.py:145:        with self.run_in_subprocess(
./click/tests/test_install.py:162:        with self.run_in_subprocess(
./click/tests/test_install.py:174:        with self.run_in_subprocess(
./click/tests/test_install.py:218:        with self.run_in_subprocess(
./click/tests/test_install.py:237:        with self.run_in_subprocess(
./click/tests/test_install.py:251:        with self.run_in_subprocess(
./click/tests/test_install.py:267:        with self.run_in_subprocess(
./click/tests/test_install.py:301:        with self.run_in_subprocess(
./click/tests/test_install.py:324:        with self.run_in_subprocess(
./click/tests/test_install.py:351:        with self.run_in_subprocess(
./click/tests/test_install.py:378:        with self.run_in_subprocess(
./click/tests/test_install.py:433:        with self.run_in_subprocess(
./click/tests/test_install.py:482:        with self.run_in_subprocess(
./click/tests/test_install.py:544:        with self.run_in_subprocess(
./click/tests/test_install.py:594:        with self.run_in_subprocess(
./click/tests/test_install.py:631:        with self.run_in_subprocess(
./click/tests/test_framework.py:52:        with self.run_in_subprocess(
./click/tests/test_framework.py:62:        with self.run_in_subprocess(
./click/tests/test_framework.py:70:        with self.run_in_subprocess(
./click/tests/test_framework.py:83:        with self.run_in_subprocess(
./click/tests/test_scripts.py:42:            subp = subprocess.Popen(
./click/tests/test_database.py:128:        with self.run_in_subprocess(
./click/tests/test_database.py:143:        with self.run_in_subprocess(
./click/tests/test_database.py:163:        with self.run_in_subprocess(
./click/tests/test_database.py:183:        with self.run_in_subprocess(
./click/tests/test_database.py:197:        with self.run_in_subprocess(
./click/tests/test_database.py:218:        with self.run_in_subprocess(
./click/tests/test_database.py:242:        with self.run_in_subprocess(
./click/tests/test_database.py:264:        with self.run_in_subprocess(
./click/tests/test_database.py:344:        with self.run_in_subprocess(
./click/tests/test_database.py:368:        with self.run_in_subprocess(
./click/build.py:43:    apt_pkg.init_system()
./click/framework.py:119:                'Frameworks %s not present on system (use '
./click/framework.py:124:                'Framework "%s" not present on system (use '
./click/commands/desktophook.py:84:def quote_for_desktop_exec(s):
./click/commands/desktophook.py:140:                        (key, quote_for_desktop_exec(profile), value))
./click/install.py:74:apt_pkg.init_system()
./click/install.py:274:    def _install_preexec(self, inst_dir):

== memory_management() ==
(unsupported type 'python')

== files() ==
./click/tests/test_user.py:87:            with open(os.path.join(self.temp_dir, "db.conf"), "w") as f:
./click/tests/test_hooks.py:149:    def test_open(self):
./click/tests/test_hooks.py:160:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:175:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:187:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:201:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:216:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:231:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:246:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:262:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:282:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:319:            hook = Click.Hook.open(db, "test")
./click/tests/test_hooks.py:338:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:357:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:382:            hook = Click.Hook.open(self.db, "new")
./click/tests/test_hooks.py:416:            hook = Click.Hook.open(self.db, "old")
./click/tests/test_hooks.py:447:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:465:    def test_open(self):
./click/tests/test_hooks.py:476:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:494:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:507:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:521:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:540:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:556:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:578:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:605:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:634:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:670:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:694:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:727:            hook = Click.Hook.open(self.db, "new")
./click/tests/test_hooks.py:790:            hook = Click.Hook.open(self.db, "old")
./click/tests/test_hooks.py:825:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:856:            hook = Click.Hook.open(self.db, "test")
./click/tests/test_hooks.py:910:            hook = Click.Hook.open(db, "test")
./click/tests/gimock.py:280:        with open(c_path, "w") as c:
./click/tests/gimock.py:365:            with open(c_path) as c:
./click/tests/gimock.py:436:            reader = os.fdopen(rfd, "rb")
./click/tests/gimock.py:450:                writer = os.fdopen(wfd, "wb")
./click/tests/gimock.py:459:                writer = os.fdopen(wfd, "wb")
./click/tests/test_install.py:63:            with open("/dev/null", "w") as devnull:
./click/tests/test_install.py:330:            with open(data_path, "rb") as data:
./click/tests/test_install.py:412:            with open(status_path) as status_file:
./click/tests/test_install.py:444:                    with open("/dev/null", "w") as devnull:
./click/tests/test_install.py:519:            with open(status_path) as status_file:
./click/tests/helpers.py:156:        with open(framework_filename, "w") as f:
./click/tests/helpers.py:316:    with open(path, mode) as f:
./click/tests/helpers.py:325:        with codecs.open(path, mode, "UTF-8") as f:
./click/tests/helpers.py:331:        with io.open(path, mode, encoding="UTF-8") as f:
./click/tests/test_arfile.py:54:        with open(path, "rb") as fileobj:
./click/tests/test_arfile.py:59:        with open(path, "wb") as fileobj:
./click/tests/test_arfile.py:70:        with open(member_path, "wb") as member:
./click/tests/test_arfile.py:82:        with open(os.path.join(extract_path, "data-member"), "rb") as member:
./click/tests/test_arfile.py:84:        with open(os.path.join(extract_path, "file-member"), "rb") as member:
./click/tests/test_build.py:47:def umask(force_umask):
./click/tests/test_build.py:50:            old_umask = os.umask(force_umask)
./click/tests/test_build.py:54:                os.umask(old_umask)
./click/tests/test_build.py:127:    @umask(0o22)
./click/tests/test_build.py:167:        with open(os.path.join(scratch, "manifest.json")) as source, \
./click/tests/test_build.py:168:                open(manifest_path) as target:
./click/tests/test_build.py:174:        with open(os.path.join(control_path, "md5sums")) as md5sums:
./click/tests/test_build.py:182:        with open(os.path.join(control_path, "preinst")) as preinst:
./click/tests/test_build.py:200:            with open(os.path.join(scratch, rel_path)) as source, \
./click/tests/test_build.py:201:                    open(os.path.join(extract_path, rel_path)) as target:
./click/tests/test_build.py:249:        with open(os.path.join(scratch, "manifest.json")) as source, \
./click/tests/test_build.py:250:                open(manifest_path) as target:
./click/tests/test_build.py:276:        with open(os.path.join(scratch, "manifest.json")) as source, \
./click/tests/test_build.py:277:                open(manifest_path) as target:
./click/tests/test_build.py:317:    @umask(0o22)
./click/tests/test_build.py:338:        with tarfile.open(path, mode="r:gz") as tar:
./click/tests/test_framework.py:45:            with open(framework_path, "w") as framework:
./click/tests/test_framework.py:51:    def test_open(self):
./click/tests/test_framework.py:56:            Click.Framework.open("framework-1")
./click/tests/test_framework.py:92:            framework = Click.Framework.open("ubuntu-sdk-14.04-qml")
./click/tests/test_osextras.py:100:    def test_umask(self):
./click/tests/test_osextras.py:101:        old_mask = os.umask(0o040)
./click/tests/test_osextras.py:103:            self.assertEqual(0o040, self.mod.get_umask())
./click/tests/test_osextras.py:104:            os.umask(0o002)
./click/tests/test_osextras.py:105:            self.assertEqual(0o002, self.mod.get_umask())
./click/tests/test_osextras.py:107:            os.umask(old_mask)
./click/tests/test_osextras.py:119:        d = Click.Dir.open(new_dir, 0)
./click/tests/test_osextras.py:125:        d = Click.Dir.open(new_dir, 0)
./click/tests/test_database.py:411:        with open(os.path.join(self.temp_dir, "a.conf"), "w") as a:
./click/tests/test_database.py:414:        with open(os.path.join(self.temp_dir, "b.conf"), "w") as b:
./click/tests/test_database.py:426:        with open(os.path.join(self.temp_dir, "a.conf"), "w") as a:
./click/tests/test_database.py:440:        with open(os.path.join(self.temp_dir, "00_custom.conf"), "w") as f:
./click/tests/test_database.py:443:        with open(os.path.join(self.temp_dir, "99_default.conf"), "w") as f:
./click/tests/test_database.py:451:        with open(os.path.join(self.temp_dir, "a.conf"), "w") as a:
./click/tests/test_database.py:454:        with open(os.path.join(self.temp_dir, "b.conf"), "w") as b:
./click/tests/test_database.py:478:        with open(os.path.join(self.temp_dir, "a.conf"), "w") as a:
./click/tests/test_database.py:481:        with open(os.path.join(self.temp_dir, "b.conf"), "w") as b:
./click/tests/test_database.py:502:        with open(os.path.join(self.temp_dir, "a.conf"), "w") as a:
./click/tests/test_database.py:505:        with open(os.path.join(self.temp_dir, "b.conf"), "w") as b:
./click/tests/test_database.py:528:        with open(os.path.join(self.temp_dir, "a.conf"), "w") as a:
./click/tests/test_database.py:531:        with open(os.path.join(self.temp_dir, "b.conf"), "w") as b:
./click/tests/test_database.py:574:        with open(os.path.join(self.temp_dir, "a.conf"), "w") as a:
./click/tests/test_database.py:577:        with open(os.path.join(self.temp_dir, "b.conf"), "w") as b:
./click/tests/test_database.py:621:        with open(os.path.join(self.temp_dir, "a.conf"), "w") as a:
./click/tests/test_database.py:624:        with open(os.path.join(self.temp_dir, "b.conf"), "w") as b:
./click/build.py:91:        with io.open(manifest_path, encoding="UTF-8") as manifest:
./click/build.py:185:        with contextlib.closing(FakerootTarFile.open(
./click/build.py:191:        control_tar = tarfile.open(
./click/build.py:247:            with io.open(control_path, "w", encoding="UTF-8") as control:
./click/build.py:263:            with io.open(
./click/build.py:274:            with open(md5sums_path, "w") as md5sums:
./click/build.py:277:                    with open(os.path.join(root_path, path), "rb") as f:
./click/build.py:286:            with open(preinst_path, "w") as preinst:
./click/build.py:357:            with contextlib.closing(FakerootTarFile.open(
./click/chroot.py:259:        with open("/dev/null", "w") as devnull:
./click/chroot.py:309:        with open("%s/etc/apt/sources.list" % mount, "w") as sources_list:
./click/chroot.py:315:        with open(chroot_config, "w") as target:
./click/chroot.py:332:        with open(daemon_policy, "w") as policy:
./click/chroot.py:346:        with open(finish_script, 'w') as finish:
./click/arfile.py:54:            fileobj = open(name, self.real_mode)
./click/arfile.py:97:        with open(path, "rb") as fobj:
./click/framework.py:43:    with open(filename) as f:
./click/commands/desktophook.py:42:                with io.open(path, encoding="UTF-8") as f:
./click/commands/desktophook.py:78:        with io.open(manifest_path, encoding="UTF-8") as manifest:
./click/commands/desktophook.py:116:    with io.open(source_path, encoding="UTF-8") as source, \
./click/commands/desktophook.py:117:         io.open(target_path, "w", encoding="UTF-8") as target:
./click/commands/hook.py:62:        hook = Click.Hook.open(db, name)
./click/install.py:112:        with open(path, "rb") as fd:
./click/install.py:245:        os.umask(0o022)
./click/install.py:280:            with open(os.path.join(admin_dir, "available"), "w"):
./click/install.py:282:            with open(os.path.join(admin_dir, "status"), "w"):
./click/install.py:329:        with open(path, "rb") as fd:
./click/osextras.py:88:def get_umask():
./click/osextras.py:89:    mask = os.umask(0)
./click/osextras.py:90:    os.umask(mask)
./doc/conf.py:55:with io.open('../debian/changelog', encoding="UTF-8") as changelog:

== logging() ==
./click/tests/gimock.py:313:                            dlerror ();
./click/tests/gimock.py:315:                            if (dlerror ()) _exit (1);
./click/tests/gimock.py:356:                    dlerror ();
./click/tests/gimock.py:362:                print("    if (dlerror ()) _exit (1);", file=c)
./click/tests/test_build.py:102:    def test_manifest_syntax_error(self):
./click/tests/test_osextras.py:128:    def test_dir_open_error(self):
./click/tests/test_osextras.py:134:    def test_unlink_error(self):
./click/tests/test_osextras.py:155:    def test_listdir_oserror(self):
./click/tests/test_osextras.py:160:    def test_unlink_oserror(self):
./click/commands/unregister.py:39:        parser.error("need package name")
./click/commands/unregister.py:41:        parser.error(
./click/commands/pkgdir.py:37:        parser.error("need package name")
./click/commands/build.py:34:        parser.error("need directory")
./click/commands/build.py:37:        parser.error('directory "%s" does not exist' % directory)
./click/commands/build.py:41:        parser.error(
./click/commands/chroot.py:36:        parser.error("must be run as root; try sudo")
./click/commands/chroot.py:40:def message_on_error(exc, msg):
./click/commands/chroot.py:60:        parser.error(
./click/commands/chroot.py:65:    with message_on_error(
./click/commands/chroot.py:75:    with message_on_error(
./click/commands/chroot.py:86:    with message_on_error(
./click/commands/chroot.py:99:    with message_on_error(
./click/commands/chroot.py:112:    with message_on_error(
./click/commands/chroot.py:121:    with message_on_error(
./click/commands/chroot.py:131:    with message_on_error(
./click/commands/chroot.py:141:    with message_on_error(
./click/commands/chroot.py:228:        parser.error(
./click/commands/register.py:37:        parser.error("need package name")
./click/commands/register.py:39:        parser.error("need version")
./click/commands/hook.py:52:        parser.error("need subcommand (install, remove, run-system, run-user)")
./click/commands/hook.py:56:            parser.error("need hook name")
./click/commands/hook.py:91:        parser.error(
./click/commands/info.py:62:        parser.error("need file name")
./click/commands/verify.py:34:        parser.error("need package file name")
./click/commands/buildsource.py:34:        parser.error("need directory")
./click/commands/buildsource.py:37:        parser.error('directory "%s" does not exist' % directory)
./click/commands/buildsource.py:41:        parser.error(
./click/commands/install.py:48:        parser.error("need package file name")
./click/commands/contents.py:28:        parser.error("need file name")

== environment() ==

== privileged() ==
./click/install.py:241:        os.setresgid(pw.pw_gid, pw.pw_gid, pw.pw_gid)
./click/install.py:242:        os.setresuid(pw.pw_uid, pw.pw_uid, pw.pw_uid)
./click/tests/gimock.py:28:that calls chown(), for instance, and want to test how it's called rather
./click/tests/gimock.py:29:than worrying about setting up a fakeroot-type environment where chown()
./click/tests/test_install.py:367:                os.chmod(self.temp_dir, temp_dir_mode & write_mask)
./click/tests/test_install.py:371:                os.chmod(self.temp_dir, temp_dir_mode)
./click/tests/test_install.py:549:            os.chmod(owner_only_file, stat.S_IRUSR | stat.S_IWUSR)
./click/tests/test_build.py:147:            os.fchmod(f.fileno(), 0o600)
./click/tests/test_build.py:333:            os.fchmod(f.fileno(), 0o600)
./click/tests/test_osextras.py:53:        os.chmod(program, 0o755)
./click/build.py:63:        os.chmod(temp_dir, 0o755)
./click/build.py:271:            os.chmod(real_manifest_path, 0o644)
./click/build.py:352:            os.chmod(real_manifest_path, 0o644)
./click/chroot.py:265:        os.chmod(path, mode | stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH)
./click/commands/chroot.py:158:        help="framework for the chroot (default: ubuntu-sdk-13.10)")
./click/commands/chroot.py:161:        help="series to use for a newly-created chroot (defaults to a series "
./click/install.py:235:        os.setgroups(
./click/install.py:310:                os.chown(root_click, pw.pw_uid, pw.pw_gid)
./click/install.py:354:                        os.chmod(entry_path, new_entry_mode)
./click/install.py:377:            os.chown(new_path, pw.pw_uid, pw.pw_gid, follow_symlinks=False)

== networking() ==
./click/tests/gimock.py:366:                print(c.read())
./click/tests/test_install.py:98:                script.write(contents)
./click/tests/test_install.py:331:                data_md5sum = hashlib.md5(data.read()).hexdigest()
./click/tests/helpers.py:157:            f.write("Base-Name: {0}\n".format(name))
./click/tests/helpers.py:158:            f.write("Base-Version: {0}\n".format(ver))
./click/tests/test_arfile.py:71:            member.write(b"\x00\x01\x02\x03\x04\x05\x06\x07")
./click/tests/test_arfile.py:83:            self.assertEqual(b"some data", member.read())
./click/tests/test_arfile.py:86:                b"\x00\x01\x02\x03\x04\x05\x06\x07", member.read())
./click/tests/test_build.py:132:            f.write("test /bin/foo\n")
./click/tests/test_build.py:136:            f.write("test /toplevel\n")
./click/tests/test_build.py:176:                md5sums.read(),
./click/tests/test_build.py:183:            self.assertEqual(static_preinst, preinst.read())
./click/tests/test_build.py:202:                self.assertEqual(source.read(), target.read())
./click/tests/test_database.py:418:        db.read(db_dir=self.temp_dir)
./click/tests/test_database.py:425:    def test_no_read(self):
./click/tests/test_database.py:447:        db.read(db_dir=self.temp_dir)
./click/tests/test_database.py:458:        db.read(db_dir=self.temp_dir)
./click/tests/test_database.py:485:        db.read(db_dir=self.temp_dir)
./click/tests/test_database.py:509:        db.read(db_dir=self.temp_dir)
./click/tests/test_database.py:535:        db.read(db_dir=self.temp_dir)
./click/tests/test_database.py:581:        db.read(db_dir=self.temp_dir)
./click/tests/test_database.py:628:        db.read(db_dir=self.temp_dir)
./click/build.py:279:                            buf = f.read(16384)
./click/build.py:287:                preinst.write(static_preinst)
./click/arfile.py:77:        self.fileobj.write(b"!<arch>\n")
./click/arfile.py:87:        self.fileobj.write(header)
./click/arfile.py:92:        self.fileobj.write(data)
./click/arfile.py:94:            self.fileobj.write(b"\n")  # padding
./click/arfile.py:102:            self.fileobj.write(b"\n")  # padding
./click/commands/desktophook.py:43:                    if COMMENT not in f.read():
./click/commands/desktophook.py:124:                target.write(line)
./click/commands/desktophook.py:127:                target.write(line)
./click/commands/desktophook.py:132:                target.write(line)
./click/commands/desktophook.py:138:                    target.write(
./click/commands/desktophook.py:142:                    target.write("%s=%s\n" % (key, source_dir))
./click/commands/desktophook.py:147:                        target.write("%s=%s\n" % (key, icon_path))
./click/commands/desktophook.py:149:                        target.write("%s=%s\n" % (key, value))
./click/commands/desktophook.py:151:                    target.write("%s=%s\n" % (key, value))
./click/commands/desktophook.py:153:            target.write("Path=%s\n" % source_dir)
./click/commands/unregister.py:47:    db.read(db_dir=None)
./click/commands/pkgdir.py:43:            db.read(db_dir=None)
./click/commands/register.py:41:    db.read(db_dir=None)
./click/commands/hook.py:58:        db.read(db_dir=None)
./click/commands/hook.py:66:        db.read(db_dir=None)
./click/commands/hook.py:79:        db.read(db_dir=None)
./click/commands/info.py:34:        db.read(db_dir=None)
./click/commands/install.py:50:    db.read(db_dir=None)
./click/commands/list.py:31:    db.read(db_dir=None)

== http:// ==
./click/preinst.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/test_query.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/test_user.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/test_chroot.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/test_chroot.py:52:            'deb [arch=amd64] http://archive.ubuntu.com/ubuntu trusty main',
./click/tests/test_chroot.py:53:            'deb [arch=amd64] http://archive.ubuntu.com/ubuntu trusty-updates main',
./click/tests/test_chroot.py:54:            'deb [arch=amd64] http://archive.ubuntu.com/ubuntu trusty-security main',
./click/tests/test_chroot.py:55:            'deb [arch=i386] http://archive.ubuntu.com/ubuntu trusty main',
./click/tests/test_chroot.py:56:            'deb [arch=i386] http://archive.ubuntu.com/ubuntu trusty-updates main',
./click/tests/test_chroot.py:57:            'deb [arch=i386] http://archive.ubuntu.com/ubuntu trusty-security main',
./click/tests/test_chroot.py:58:            'deb-src http://archive.ubuntu.com/ubuntu trusty main',
./click/tests/test_chroot.py:59:            'deb-src http://archive.ubuntu.com/ubuntu trusty-updates main',
./click/tests/test_chroot.py:60:            'deb-src http://archive.ubuntu.com/ubuntu trusty-security main',
./click/tests/test_chroot.py:70:            'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports trusty main',
./click/tests/test_chroot.py:71:            'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports trusty-updates main',
./click/tests/test_chroot.py:72:            'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports trusty-security main',
./click/tests/test_chroot.py:73:            'deb [arch=i386] http://archive.ubuntu.com/ubuntu trusty main',
./click/tests/test_chroot.py:74:            'deb [arch=i386] http://archive.ubuntu.com/ubuntu trusty-updates main',
./click/tests/test_chroot.py:75:            'deb [arch=i386] http://archive.ubuntu.com/ubuntu trusty-security main',
./click/tests/test_chroot.py:76:            'deb-src http://archive.ubuntu.com/ubuntu trusty main',
./click/tests/test_chroot.py:77:            'deb-src http://archive.ubuntu.com/ubuntu trusty-updates main',
./click/tests/test_chroot.py:78:            'deb-src http://archive.ubuntu.com/ubuntu trusty-security main',
./click/tests/test_chroot.py:88:            'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports trusty main',
./click/tests/test_chroot.py:89:            'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports trusty-updates main',
./click/tests/test_chroot.py:90:            'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports trusty-security main',
./click/tests/test_chroot.py:91:            'deb [arch=armel] http://ports.ubuntu.com/ubuntu-ports trusty main',
./click/tests/test_chroot.py:92:            'deb [arch=armel] http://ports.ubuntu.com/ubuntu-ports trusty-updates main',
./click/tests/test_chroot.py:93:            'deb [arch=armel] http://ports.ubuntu.com/ubuntu-ports trusty-security main',
./click/tests/test_chroot.py:94:            'deb-src http://archive.ubuntu.com/ubuntu trusty main',
./click/tests/test_chroot.py:95:            'deb-src http://archive.ubuntu.com/ubuntu trusty-updates main',
./click/tests/test_chroot.py:96:            'deb-src http://archive.ubuntu.com/ubuntu trusty-security main',
./click/tests/test_chroot.py:106:            'deb [arch=i386] http://archive.ubuntu.com/ubuntu trusty main',
./click/tests/test_chroot.py:107:            'deb [arch=i386] http://archive.ubuntu.com/ubuntu trusty-updates main',
./click/tests/test_chroot.py:108:            'deb [arch=i386] http://archive.ubuntu.com/ubuntu trusty-security main',
./click/tests/test_chroot.py:109:            'deb-src http://archive.ubuntu.com/ubuntu trusty main',
./click/tests/test_chroot.py:110:            'deb-src http://archive.ubuntu.com/ubuntu trusty-updates main',
./click/tests/test_chroot.py:111:            'deb-src http://archive.ubuntu.com/ubuntu trusty-security main',
./click/tests/test_hooks.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/gimock.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/gimock.py:83:   <http://bugs.python.org/issue5710>`_.  The least awful approach for now
./click/tests/gimock.py:135:CORE_NS = "http://www.gtk.org/introspection/core/1.0"
./click/tests/gimock.py:136:C_NS = "http://www.gtk.org/introspection/c/1.0"
./click/tests/gimock.py:137:GLIB_NS = "http://www.gtk.org/introspection/glib/1.0"
./click/tests/gimock.py:474:        # working around http://bugs.python.org/issue5710.
./click/tests/test_static.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/test_install.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/helpers.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/helpers.py:17:# (http://docs.python.org/3/license.html).
./click/tests/test_arfile.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/gimock_types.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/test_build.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/test_framework.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/test_scripts.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/test_osextras.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/tests/test_database.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/versions.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/build.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/chroot.py:15:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/chroot.py:169:            self.archive = "http://archive.ubuntu.com/ubuntu"
./click/chroot.py:218:        ports_mirror = "http://ports.ubuntu.com/ubuntu-ports"
./click/arfile.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/framework.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/json_helpers.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/desktophook.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/desktophook.py:88:      http://standards.freedesktop.org/desktop-entry-spec/latest/ar01s06.html
./click/commands/unregister.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/pkgdir.py:15:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/build.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/chroot.py:16:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/framework.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/register.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/hook.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/__init__.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/info.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/verify.py:16:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/buildsource.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/install.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/list.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/commands/contents.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/install.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/install.py:375:            # http://bugs.python.org/issue18108
./click/osextras.py:14:# along with this program.  If not, see <http://www.gnu.org/licenses/>.
./click/osextras.py:40:        # http://bugs.python.org/issue17012

== encryption ==
./click/tests/test_static.py:70:        # https://github.com/jcrocholl/pep8/issues/103

== sql() ==
./click/commands/chroot.py:93:def execute(parser, args):

== tmp() ==

== priv_cmds (sudo, gksu, pkexec) ==
./click/chroot.py:165:        # this doesn't work because we are running this under sudo
./click/commands/chroot.py:36:        parser.error("must be run as root; try sudo")

== envvars() ==
./click/tests/gimock.py:30:will work.  The obvious solution is to use `LD_PRELOAD` wrappers, but there
./click/tests/gimock.py:33: * You can only set up a new `LD_PRELOAD` by going through the run-time
./click/tests/gimock.py:79:   -Wl,-Bsymbolic-functions` prevents `LD_PRELOAD` working for intra-library
./click/tests/gimock.py:400:                del os.environ["LD_PRELOAD"]
./click/tests/gimock.py:433:                env["LD_PRELOAD"] = lib_path
./click/tests/__init__.py:24:            "LD_LIBRARY_PATH", os.path.join(_lib_click_dir, ".libs")):
./click/tests/__init__.py:30:        # the new value of LD_LIBRARY_PATH.
./click/install.py:115:            if "LD_PRELOAD" in env:
./click/install.py:116:                preloads.append(env["LD_PRELOAD"])
./click/install.py:117:            env["LD_PRELOAD"] = " ".join(preloads)
./click/install.py:332:            if "LD_PRELOAD" in env:
./click/install.py:333:                preloads.append(env["LD_PRELOAD"])
./click/install.py:334:            env["LD_PRELOAD"] = " ".join(preloads)

== webkit() ==
./click/chroot.py:66:        "libqt5webkit5-dev:TARGET",
./click/chroot.py:82:        "libqt5webkit5-dev:TARGET",
./click/chroot.py:100:        "libqt5webkit5-dev:TARGET",

== comments (XXX, FIXME, TODO) ==
./click/tests/gimock.py:367:        # TODO: Use libtool or similar rather than hardcoding gcc invocation.
./click/tests/gimock_types.py:40:# TODO: This is pretty awful.  The layout of "struct stat" is complicated
./click/tests/test_build.py:256:    # FIXME: DRY violation with test_build_multiple_architectures etc
./click/build.py:135:    # TODO: This should be configurable, or at least extensible.
./click/build.py:299:    # TODO: This should be configurable, or at least extensible.
./click/framework.py:34:# FIXME: use native lib if available
./click/commands/desktophook.py:112:# TODO: This is a very crude .desktop file mangler; we should instead
./click/commands/unregister.py:64:    # TODO: remove data
./click/commands/chroot.py:50:# FIXME: i18n(?)
./click/install.py:168:            # TODO: perhaps just do full name validation?
./click/install.py:181:            # TODO: perhaps just do full version validation?
./click/install.py:249:        # TODO: Dropping privileges and calling
./click/install.py:312:        # TODO: sandbox so that this can only write to the unpack directory

== unsafe input mechanisms ==
(unsupported type 'python')

