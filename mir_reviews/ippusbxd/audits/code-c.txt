Running: /home/sarnold/bin/audit-code.sh -c C ./
Scanning './'
== subprocess_spawned() ==

== memory_management() ==
./src/http.c:32:	struct http_message_t *msg = calloc(1, sizeof(*msg));
./src/http.c:138:		uint8_t *buffer = calloc(1, needed_size);
./src/http.c:145:	memcpy(msg->spare_buffer, pkt->buffer + non_spare, spare_size);
./src/http.c:550:	pkt = calloc(1, sizeof(*pkt));
./src/http.c:562:		buf = calloc(capacity, sizeof(*buf));
./src/ippusbxd.c:156:		struct service_thread_param *args = calloc(1, sizeof(*args));
./src/usb.c:99:	struct usb_sock_t *usb = calloc(1, sizeof *usb);
./src/usb.c:186:	usb->interfaces = calloc(usb->num_interfaces,
./src/usb.c:253:	usb->interface_pool = calloc(usb->num_avail,
./src/usb.c:477:	struct usb_conn_t *conn = calloc(1, sizeof(*conn));
./src/tcp.c:31:	struct tcp_sock_t *this = calloc(1, sizeof *this);
./src/tcp.c:181:	struct tcp_conn_t *conn = calloc(1, sizeof *conn);

== files() ==
./src/ippusbxd.c:127:	struct usb_sock_t *usb_sock = usb_open();
./src/ippusbxd.c:133:	struct tcp_sock_t *tcp_socket = tcp_open(desired_port);
./src/usb.c:81:	int status = libusb_open(dev, &handle);
./src/usb.c:97:struct usb_sock_t *usb_open()
./src/usb.c:177:	status = libusb_open(printer_device, &usb->printer);
./src/usb.h:60:struct usb_sock_t *usb_open(void);
./src/tcp.c:29:struct tcp_sock_t *tcp_open(uint16_t port)
./src/tcp.h:42:struct tcp_sock_t *tcp_open(uint16_t);

== logging() ==
./src/logging.c:33:		syslog(LOG_ERR, fmt, arg);
./src/tcp.c:126:				strerror(errno_saved));

== environment() ==

== privileged() ==

== networking() ==
./src/tcp.c:39:	this->sd = socket(AF_INET6, SOCK_STREAM, 0);
./src/tcp.c:48:	addr.sin6_family = AF_INET6;
./src/tcp.c:39:	this->sd = socket(AF_INET6, SOCK_STREAM, 0);
./src/tcp.c:53:	if (bind(this->sd,
./src/tcp.c:62:	if (listen(this->sd, HTTP_MAX_PENDING_CONNS) < 0) {

== http:// ==
./src/http.h:7: * http://www.apache.org/licenses/LICENSE-2.0
./src/http.c:7: * http://www.apache.org/licenses/LICENSE-2.0
./src/http.c:313:	 * http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.3
./src/http.c:349:	 * link: http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.4
./src/ippusbxd.c:7: * http://www.apache.org/licenses/LICENSE-2.0
./src/usb.c:7: * http://www.apache.org/licenses/LICENSE-2.0
./src/logging.h:7: * http://www.apache.org/licenses/LICENSE-2.0
./src/usb.h:7: * http://www.apache.org/licenses/LICENSE-2.0
./src/logging.c:7: * http://www.apache.org/licenses/LICENSE-2.0
./src/options.h:7: * http://www.apache.org/licenses/LICENSE-2.0
./src/tcp.c:7: * http://www.apache.org/licenses/LICENSE-2.0
./src/options.c:7: * http://www.apache.org/licenses/LICENSE-2.0
./src/tcp.h:7: * http://www.apache.org/licenses/LICENSE-2.0

== encryption ==
./src/usb.c:389:			// https://github.com/libusb/libusb/issues/35

== sql() ==

== tmp() ==

== priv_cmds (sudo, gksu, pkexec) ==

== envvars() ==

== webkit() ==

== comments (XXX, FIXME, TODO) ==

== unsafe input mechanisms ==

