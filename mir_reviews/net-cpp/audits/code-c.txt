Running: /home/sarnold/bin/audit-code.sh -c C ./
Scanning './'
== subprocess_spawned() ==

== memory_management() ==
./src/core/net/http/impl/curl/multi.cpp:259:    auto holder = new Holder<Private>{d};
./src/core/net/http/impl/curl/multi.cpp:554:        socket = new Socket{thiz->dispatcher, s};

== files() ==

== logging() ==
./src/core/net/error.cpp:24:    : std::runtime_error(loc.print_with_what(what).c_str())
./src/core/net/http/status.cpp:66:        {http::Status::internal_server_error, "internal_server_error(500)"},
./src/core/net/http/request.cpp:54:const http::Request::ErrorHandler& http::Request::Handler::on_error() const
./src/core/net/http/request.cpp:59:http::Request::Handler& http::Request::Handler::on_error(const http::Request::ErrorHandler& handler)
./src/core/net/http/impl/curl/multi.h:76:        throw std::system_error(static_cast<int>(code), std::generic_category(), ss.str());
./src/core/net/http/impl/curl/multi.h:88:        throw std::system_error(static_cast<int>(code), std::generic_category(), ss.str());
./src/core/net/http/impl/curl/request.h:187:                if (handler.on_error())
./src/core/net/http/impl/curl/request.h:190:                    handler.on_error()(core::net::http::Error(ss.str(), CORE_FROM_HERE()));
./src/core/net/http/impl/curl/easy.cpp:52:    return out << curl_easy_strerror(static_cast<CURLcode>(code));
./src/core/net/http/impl/curl/easy.cpp:217:    : std::runtime_error("Handle has been abandoned.")
./src/core/net/http/impl/curl/easy.h:174:        throw std::system_error(static_cast<int>(code), std::generic_category(), ss.str());
./src/core/net/http/impl/curl/easy.h:186:        throw std::system_error(static_cast<int>(code), std::generic_category(), ss.str());
./src/core/net/http/impl/curl/multi.cpp:70:            throw std::runtime_error("SynchronizedHandleStore::lookup_native: No such handle.");
./tests/http_client_load_test.cpp:101:                        .on_error([on_completed](const core::net::Error&) mutable
./tests/http_client_test.cpp:265:                    .on_error([&](const core::net::Error& e)
./tests/http_client_test.cpp:327:                    .on_error([&](const core::net::Error& e)
./include/core/net/http/request.h:134:        const ErrorHandler& on_error() const;
./include/core/net/http/request.h:136:        Handler& on_error(const ErrorHandler& handler);

== environment() ==

== privileged() ==

== networking() ==
./src/core/net/http/impl/curl/request.h:127:                        context.body.write(data, size * nmemb);
./src/core/net/http/impl/curl/request.h:222:                        context->body.write(data, size * nmemb);
./src/core/net/http/impl/curl/multi.cpp:129:    auto msg = curl_multi_info_read(handle, &count);
./src/core/net/http/impl/curl/multi.cpp:600:    accumulator.for_connect(timings.connect.count());
./src/core/net/http/impl/curl/multi.cpp:601:    accumulator.for_app_connect(timings.app_connect.count());
./tests/http_client_test.cpp:488:                                writer.write(search),
./tests/http_client_test.cpp:545:                                writer.write(submit),

== http:// ==
./src/core/location.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/error.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/header.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/error.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/status.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/request.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/impl/curl/shared.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/impl/curl/multi.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/impl/curl/curl.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/impl/curl/request.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/impl/curl/easy.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/impl/curl/client.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/impl/curl/easy.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/impl/curl/client.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/impl/curl/shared.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/impl/curl/multi.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./src/core/net/http/client.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./tests/http_client_load_test.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./tests/header_test.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./tests/http_client_test.cpp:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./tests/table.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./include/core/net/error.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./include/core/net/http/request.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./include/core/net/http/status.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./include/core/net/http/error.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./include/core/net/http/header.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./include/core/net/http/response.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./include/core/net/http/client.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./include/core/net/http/method.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./include/core/net/http/content_type.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./include/core/net/visibility.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
./include/core/location.h:14: * along with this program.  If not, see <http://www.gnu.org/licenses/>.

== encryption ==
./src/core/net/http/impl/curl/easy.h:59:    ssl_connect_error = CURLE_SSL_CONNECT_ERROR,
./src/core/net/http/impl/curl/easy.h:68:    ssl_engine_not_found = CURLE_SSL_ENGINE_NOTFOUND,
./src/core/net/http/impl/curl/easy.h:69:    ssl_engine_set_failed = CURLE_SSL_ENGINE_SETFAILED,
./src/core/net/http/impl/curl/easy.h:72:    ssl_cert_problem = CURLE_SSL_CERTPROBLEM,
./src/core/net/http/impl/curl/easy.h:73:    ssl_cipher = CURLE_SSL_CIPHER,
./src/core/net/http/impl/curl/easy.h:74:    ssl_ca_cert = CURLE_SSL_CACERT,
./src/core/net/http/impl/curl/easy.h:78:    ssl_engine_init_failed = CURLE_SSL_ENGINE_INITFAILED,
./src/core/net/http/impl/curl/easy.h:84:    ssl_cacert_bad_file = CURLE_SSL_CACERT_BADFILE,
./src/core/net/http/impl/curl/easy.h:86:    ssl_shutdown_failed = CURLE_SSL_SHUTDOWN_FAILED,
./src/core/net/http/impl/curl/easy.h:88:    ssl_crl_bad_file = CURLE_SSL_CRL_BADFILE,
./src/core/net/http/impl/curl/easy.h:89:    ssl_issuer_error = CURLE_SSL_ISSUER_ERROR,
./src/core/net/http/impl/curl/easy.h:137:    ssl_verify_peer = CURLOPT_SSL_VERIFYPEER,
./src/core/net/http/impl/curl/easy.h:138:    ssl_verify_host = CURLOPT_SSL_VERIFYHOST
./src/core/net/http/impl/curl/shared.cpp:29:static const curl_lock_data ssl = CURL_LOCK_DATA_SSL_SESSION;
./src/core/net/http/impl/curl/client.cpp:75:    // See: https://svn.boost.org/trac/boost/ticket/5629
./tests/http_client_test.cpp:96:    auto url = "https://search.apps.ubuntu.com/api/v1/search?q=%2Cframework%3Aubuntu-sdk-13.10%2Carchitecture%3Aamd64";
./tests/http_client_test.cpp:441:    "https://location.services.mozilla.com"
./tests/http_client_test.cpp:457:// See https://mozilla-ichnaea.readthedocs.org/en/latest/api/search.html
./tests/http_client_test.cpp:506:// See https://mozilla-ichnaea.readthedocs.org/en/latest/api/submit.html

== sql() ==
./src/core/net/http/impl/curl/request.h:94:    Response execute(const Request::ProgressHandler& ph)
./src/core/net/http/impl/curl/request.h:166:    void async_execute(const Request::Handler& handler)
./tests/http_client_load_test.cpp:93:            request->async_execute(
./tests/http_client_test.cpp:70:    auto response = request->execute(default_progress_reporter);
./tests/http_client_test.cpp:89:    EXPECT_THROW(auto response = request->execute(default_progress_reporter), core::net::Error);
./tests/http_client_test.cpp:101:    auto response = request->execute(default_progress_reporter);
./tests/http_client_test.cpp:129:    auto response = request->execute(default_progress_reporter);
./tests/http_client_test.cpp:159:    auto response = request->execute(default_progress_reporter);
./tests/http_client_test.cpp:194:    auto response = request->execute(default_progress_reporter);
./tests/http_client_test.cpp:228:    auto response = request->execute(default_progress_reporter);
./tests/http_client_test.cpp:258:    request->async_execute(
./tests/http_client_test.cpp:319:    request->async_execute(
./tests/http_client_test.cpp:370:    auto response = request->execute(default_progress_reporter);
./tests/http_client_test.cpp:398:    auto response = request->execute(default_progress_reporter);
./tests/http_client_test.cpp:424:    auto response = request->execute(default_progress_reporter);
./tests/http_client_test.cpp:491:    auto response = request->execute(default_progress_reporter);
./tests/http_client_test.cpp:547:    auto response = request->execute(default_progress_reporter);
./include/core/net/http/request.h:241:    virtual Response execute(const ProgressHandler& ph) = 0;
./include/core/net/http/request.h:248:    virtual void async_execute(const Handler& handler) = 0;

== tmp() ==

== priv_cmds (sudo, gksu, pkexec) ==

== envvars() ==

== webkit() ==

== comments (XXX, FIXME, TODO) ==
./include/core/net/http/response.h:41:    // TODO(tvoss): This really should be a stringstream, but libstdc++ is broken and

== unsafe input mechanisms ==

