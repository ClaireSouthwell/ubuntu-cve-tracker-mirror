Running: /home/sarnold/bin/audit-code.sh -c C ./
Scanning './'
== subprocess_spawned() ==

== memory_management() ==
./libndp/libndp.c:136:	return calloc(1, size);
./libndp/libndp.c:192:	memcpy(&sin6.sin6_addr, addr, sizeof(sin6.sin6_addr));
./libndp/libndp.c:401:static struct ndp_msg *ndp_msg_alloc(void)
./libndp/libndp.c:438:int ndp_msg_new(struct ndp_msg **p_msg, enum ndp_msg_type msg_type)
./libndp/libndp.c:444:	msg = ndp_msg_alloc();
./libndp/libndp.c:1368:	memcpy(&prefix, &ri->nd_opt_ri_prefix, (ri->nd_opt_ri_len - 1) << 3);
./libndp/libndp.c:1477:	memcpy(&addr, &rdnss->nd_opt_rdnss_addresses[addr_index * sizeof(addr)],
./libndp/libndp.c:1545:			memcpy(buf + buf_len, ptr, dom_len);
./libndp/libndp.c:1569:	msg = ndp_msg_alloc();
./libndp/libndp.c:1697:	handler_item = malloc(sizeof(*handler_item));
./utils/ndptool.c:337:	err = ndp_msg_new(&msg, msg_type);
./include/ndp.h:62:int ndp_msg_new(struct ndp_msg **p_msg, enum ndp_msg_type msg_type);

== files() ==
./libndp/libndp.c:220:static int ndp_sock_open(struct ndp *ndp)
./libndp/libndp.c:1816:int ndp_open(struct ndp **p_ndp)
./libndp/libndp.c:1836:	err = ndp_sock_open(ndp);
./utils/ndptool.c:449:	err = ndp_open(&ndp);
./include/ndp.h:176:int ndp_open(struct ndp **p_ndp);

== logging() ==
./libndp/libndp.c:159:	len = recvmsg(sockfd, &msghdr, flags);
./libndp/libndp.c:1584:		warn(ndp, "rcvd icmp6 packet too short (%luB)", len);
./libndp/libndp.c:1597:		warn(ndp, "rcvd invalid ND message");
./libndp/ndp_private.h:71:#  define warn(ndp, arg...) ndp_log_cond(ndp, LOG_WARNING, ## arg)
./libndp/ndp_private.h:76:#  define warn(ndp, arg...) ndp_log_null(ndp, ## arg)
./utils/ndptool.c:451:		pr_err("Failed to open ndp: %s\n", strerror(-err));
./utils/ndptool.c:479:		pr_err("Command failed \"%s\"\n", strerror(-err));

== environment() ==
./libndp/libndp.c:1828:	env = getenv("NDP_LOG");

== privileged() ==

== networking() ==
./libndp/libndp.c:211:	return inet_ntop(AF_INET6, addr, buf, sizeof(buf));
./libndp/libndp.c:228:	sock = socket(PF_INET6, SOCK_RAW, IPPROTO_ICMPV6);
./utils/ndptool.c:146:	return inet_ntop(AF_INET6, addr, buf, sizeof(buf));
./libndp/libndp.c:159:	len = recvmsg(sockfd, &msghdr, flags);
./libndp/libndp.c:195:	ret = sendto(sockfd, buf, buflen, flags, &sin6, sizeof(sin6));
./libndp/libndp.c:228:	sock = socket(PF_INET6, SOCK_RAW, IPPROTO_ICMPV6);

== http:// ==

== encryption ==

== sql() ==

== tmp() ==

== priv_cmds (sudo, gksu, pkexec) ==

== envvars() ==

== webkit() ==

== comments (XXX, FIXME, TODO) ==

== unsafe input mechanisms ==

