#!/usr/bin/python
#
# This script produces HTML output for a specific package, using CVE details
# from the command-line.
#
# Copyright 2009 Canonical, Ltd.
# Author: Kees Cook <kees@ubuntu.com>
# License: GPLv3
import sys
import cve_lib
import source_map
from urllib import quote
from cgi import escape
from time import gmtime, strftime

map = source_map.load()
releases = cve_lib.releases

for eol in cve_lib.eol_releases:
    if eol in releases:
        releases.remove(eol)

def htmlTableHeader():
    header = '<tr><th>CVE</th>'
    for rel in releases:
        name = rel
        header += "<th>%s</th>" % (name.capitalize())
    #header += '<th>Links</th><th>Notes</th></tr>'
    return header


pkg = sys.argv[1]
cvefiles = sys.argv[2:]


print '''<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>%s CVEs in Ubuntu</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="author" content="Canonical Ltd, and others" />
<meta name="description" content="Ubuntu Package CVE Entry" />
<meta name="copyright" content="Canonical Ltd, and others" />
<style type='text/css' media='all'>

body {
 padding: 0 1em;
 color: #000;
 background-color: #fff;
}

/*
a, a:link, a:visited, a:hover, a:active {
 color: #d90d19;
}
*/

h2.pkg {
 border-left: 2px solid #3b2e1e;
 padding: 0.1em 0.5em;
 color: #3b2e1e;
}

.item div.field, .pkg div.field {
 margin-top: 1em;
 font-weight: bold;
 text-decoration: underline;
 color: #3b2e1e;
}

div.value, div.notes-value,  div.negligible-value, div.low-value, div.medium-value, div.high-value, div.critical-value, div.patches {
 font-size: 90%%;
 margin-left: 0.3em;
 margin-top: 0.1em;
}

div.patches {
 margin-top: 1em;
}

span.safe {
 color: green;
}

span.pending {
 color: #0f0;
}

div.high-value, div.critical-value, span.vuln {
 font-weight: bold;
 color: #d90d19;
}

div.medium-value {
 font-weight: bold;
 color: orange;
}

table {
 border-collapse: collapse;
 border: 2px solid #3b2e1e;
}
th {
 border-bottom: 2px solid #3b2e1e;
 color: #3b2e1e;
}

/* basic styling */
td {
 border: 1px solid #3b2e1e;
 text-align: center;
 padding-left: 0.5em;
 padding-right: 0.5em;
 background-color: white;
 font-size: smaller;
}

/* critical and high */
tr.critical td.needed, tr.critical td.needs-triage, tr.critical td.pkgpending, tr.high td.needed, tr.high td.needs-triage, tr.high td.pkgpending {
 background-color: red;
}

/* medium */
tr.medium td.needed, tr.medium td.needs-triage, tr.medium td.pkgpending {
 background-color: orange;
}

/* low */
tr.low td.needed, tr.low td.needs-triage, tr.low td.pkgpending {
 background-color: yellow;
}

/* negligible */
tr.negligible td.needed, tr.negligible td.needs-triage, tr.negligible td.pkgpending {
 background-color: #ddd;
}

/* released, DNE, not-affected */
td.released, td.DNE, td.not-affected {
 background-color: green;
}

/* untriaged */
tr.untriaged td.needed, tr.untriaged td.needs-triage, tr.untriaged td.pkgpending {
 background-color: #f6f;
}

/* pending */
td.pending {
 background-color: #0f0;
}

td p {
 padding: 0;
 margin: 0;
}

.pkg td span {
 font-weight: bold;
 font-size: 90%%;
 padding-left: 1em;
}

div.notes-value {
 font-family: monospace;
}

ul, ol, .pkg table {
 margin: 0.2em 0 0 1em;
 padding: 0.2em 0 0 0;
}
ol {
 margin-left: 1.5em;
}

ul li {
 font-size: 90%%;
 padding: 0;
 margin: 0;
 list-style-type: none;
}

div#footer {
 width: 100%%;
 font-size: smaller;
 padding: 1em;
 text-align: center;
}

</style>
</head>

<body>
''' % (escape(pkg))


print '<h2 class="pkg">%s</h2>' % (quote(pkg))

if len(cvefiles) == 0:
    print '<div class="item"><div class="field">%s</div> <div class="%s">%s</div></div>' % ('Status','value','No known public CVEs')
else:
    print '<table>' + htmlTableHeader()
    for cvefile in cvefiles:
        try:
            priority = data['Priority']
        except:
            priority = 'untriaged'
        print '<tr class="%s">' % (quote(priority)),
        data = cve_lib.load_cve(cvefile)
        # fields...
        # 'pkgs' -> dict(  pkg -> dict(  release ->  (state, notes)   ) )
        cve = data['Candidate']
        print '<td class="cve"><a href="http://people.ubuntu.com/~ubuntu-security/cve/%s">%s</a></td>' % (quote(cve), escape(cve)),
        for rel in releases:
            if data['pkgs'][pkg].has_key(rel):
                pkgstatus = data['pkgs'][pkg][rel][0]
                pkgclass = pkgstatus
                if pkgclass == 'DNE':
                    pkgstatus = '---'
                print '<td class="%s">%s</td>' % (quote(pkgclass), escape(pkgstatus)),
            else:
                print '<td class="DNE">--</td>',
        print '</tr>'
    print '</table>'

print '<div id="footer">'
print '&copy; Canonical Ltd. 2007-%s' % (strftime("%Y", gmtime()))
print '</div>'
print '''</body>
</html>
'''
