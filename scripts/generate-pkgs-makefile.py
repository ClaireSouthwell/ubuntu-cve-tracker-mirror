#!/usr/bin/python
#
# This script produces a Makefile for all known source packages in
# Ubuntu, with active CVEs.
#
# Copyright 2009 Canonical, Ltd.
# Author: Kees Cook <kees@ubuntu.com>
# License: GPLv3
import sys
import cve_lib
import source_map
map = source_map.load()
releases = cve_lib.releases

for eol in cve_lib.eol_releases:
    if eol in releases:
        releases.remove(eol)

# Generate list of all CVEs
(cves, uems) = cve_lib.get_cve_list()
# Drop all embargoed CVEs
for cve in uems:
    if cve in cves:
        cves.remove(cve)
uems = []
# Load all active CVEs
cveinfo = cve_lib.load_all(cves, uems)

# Makefile preamble
print '''SCRIPTS=$(shell echo $$SCRIPTS)
TARGET=$(shell echo $$TARGET)
ACTIVE=$(shell echo $$ACTIVE)
'''

#  cveinfo:  cve ->
#       dict( fields...
#             'pkgs' -> dict(  pkg -> dict(  release ->  (state, notes)   ) )

pkginfo = dict()
# Build list of packages that have CVEs
for cve in cves:
    for pkg in cveinfo[cve]['pkgs']:
        pkginfo.setdefault(pkg,set())
        pkginfo[pkg].add(cve)

# Output list of all dirty packages
print "DIRTY = \\"
for pkg in sorted(pkginfo):
    print "\t$(TARGET)/%s.html \\" % (pkg)
print ""


# Generate list of all source packages not affected by CVEs
clean = set()
for rel in releases:
    for pkg in map[rel].keys():
        if pkg not in pkginfo:
            clean.add(pkg)

# Output list of all clean packages
print "CLEAN = \\"
for pkg in sorted(clean):
    print "\t$(TARGET)/%s.html \\" % (pkg)
print ""

# Print default target
print '''all: $(TARGET)/.stamp $(DIRTY) $(CLEAN)

$(TARGET)/.stamp:
\tmkdir -p $(dir $@)
\ttouch $@
'''

# Print per-dirty-package targets
for pkg in sorted(pkginfo):
    cve_str = " ".join(['$(ACTIVE)/%s' % (x) for x in sorted(pkginfo[pkg])])
    print '''$(TARGET)/%s.html: $(SCRIPTS)/html-export-pkg.py %s
\t$(SCRIPTS)/html-export-pkg.py $(shell basename $@ .html) %s > $@.tmp
\tmv $@.tmp $@
''' % (pkg, cve_str, cve_str)

# Print catch-all for clean packages
print '''$(TARGET)/%.html:: $(SCRIPTS)/html-export-pkg.py
\t$(SCRIPTS)/html-export-pkg.py $(shell basename $@ .html) > $@.tmp
\tmv $@.tmp $@
'''
