Running: /home/sarnold/bin/audit-code.sh -c C ./
Scanning './'
== subprocess_spawned() ==

== memory_management() ==
./linux/util.h:42:	if (!(newbuf = calloc(size, sizeof (uint8_t))))
./linux/util.h:102:		memcpy(__newbuf, buf, len);				\
./linux/util.h:144:			__rc = asprintf(&__path, "%s%s%s", tmpl,	\
./linux/libfwup.c:61:			strcpy(_ret, _alt_dir?_alt_dir:_esrt_dir);	\
./linux/libfwup.c:132:	rc = asprintf(&varname, "fwupdate-%s-%"PRIx64, guidstr, hw_inst);
./linux/libfwup.c:145:		local = calloc(1, sizeof (*local));
./linux/libfwup.c:153:		local->dp_ptr = calloc(1, 1024);
./linux/libfwup.c:195:	efidp_header *dp = malloc((size_t)sz);
./linux/libfwup.c:202:	memcpy(dp, local->dp, (size_t)sz);
./linux/libfwup.c:226:	rc = asprintf(&varname, "fwupdate-%s-%"PRIx64, guidstr, info->hw_inst);
./linux/libfwup.c:246:	info2 = malloc(is);
./linux/libfwup.c:250:	memcpy(info2, info, sizeof(*info));
./linux/libfwup.c:251:	memcpy(info2->dp, info->dp_ptr, dps);
./linux/libfwup.c:284:	fwup_resource_iter *new = calloc(1, sizeof (fwup_resource_iter));
./linux/libfwup.c:547:	rc = asprintf(&fwup_esp_path_tmp, "%s%s.efi", fwup_esp_path_tmpl,
./linux/libfwup.c:611:	dp_buf = calloc(1, dp_size);
./linux/libfwup.c:635:	rc = asprintf(&label, "Linux-Firmware-Updater %s", fwup_esp_path);
./linux/libfwup.c:645:	opt = calloc(1, sz);
./linux/libfwup.c:743:		sprintf(boot_next_name, "Boot%04X", boot_next);
./linux/libfwup.c:836:	rc = asprintf(&fullpath, "/boot/efi%s", relpath);
./linux/libfwup.c:873:		rc = asprintf(&fullpath,
./linux/libfwup.c:928:	dp_buf = calloc(1, req);
./linux/ucs2.h:93:	uint16_t *ret = calloc(utf8len(utf8, max) + 1, sizeof (uint16_t));

== files() ==
./linux/fwupdate.c:187:				int fd = open(filename, O_RDONLY);
./linux/libfwup.c:866:		fd = open(fullpath, O_CREAT|O_TRUNC|O_CLOEXEC|O_RDWR, 0600);
./linux/libfwup.c:999:	fin = fdopen(infd, "r");
./linux/libfwup.c:1003:	fout = fdopen(outfd, "w");

== logging() ==
./linux/fwupdate.c:39:			warn(_("Could not create iterator"));
./linux/fwupdate.c:112:			poptBadOption(optcon, 0), poptStrerror(rc));
./linux/fwupdate.c:141:			poptBadOption(optcon, 0), poptStrerror(rc));
./linux/libfwup.c:868:			warn("open of %s failed", fullpath);
./linux/libfwup.c:877:			warn("asprintf failed");
./linux/libfwup.c:882:			warn("mkostemps(%s) failed", fullpath);
./linux/libfwup.c:979:		warn("fd invalid.\n");
./linux/libfwup.c:988:		warn("get_info failed.\n");
./linux/libfwup.c:1016:			} else if (ferror(fin)) {
./linux/libfwup.c:1017:				warn("read failed");
./linux/libfwup.c:1032:			} else if (ferror(fout)) {
./linux/libfwup.c:1033:				warn("write failed");
./linux/libfwup.c:1056:		warn("put_info failed.\n");
./linux/libfwup.c:1105:		warn("buf invalid.\n");
./linux/libfwup.c:1113:		warn("get_info failed.\n");
./linux/libfwup.c:1133:			warn("write failed");
./linux/libfwup.c:1150:		warn("put_info failed.\n");

== environment() ==
./linux/libfwup.c:56:		char *_alt_dir = getenv("LIBFWUP_ESRT_DIR");		\
./linux/tester.c:9:	setenv("LIBFWUP_ESRT_DIR", "sys/firmware/efi/esrt/", 1);

== privileged() ==

== networking() ==
./linux/util.h:51:		s = read(fd, p, size - filesize);
./linux/libfwup.c:1127:		wsz = write(fd, buf+off, sz-off);

== http:// ==

== encryption ==

== sql() ==

== tmp() ==

== priv_cmds (sudo, gksu, pkexec) ==

== envvars() ==

== webkit() ==

== comments (XXX, FIXME, TODO) ==
./linux/libfwup.c:506:/* XXX PJFIX: this should be in efiboot-loadopt.h in efivar */
./linux/libfwup.c:874:			      "/boot/efi/EFI/%s/fw/fwupdate-XXXXXX.cap",

== unsafe input mechanisms ==

