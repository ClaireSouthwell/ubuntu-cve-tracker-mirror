#!/bin/sh
# Copyright (C) 2011 Canonical, Ltd.
# Author: Marc Deslauriers <marc.deslauriers@canonical.com>
# License: GPLv3

set -e

help() {
    cat <<EOM
Usage: add-backport-kernel -l <lts> -b <backport>

  -l    lts release (ex: lucid) (REQUIRED)
  -b    backport release (ex: oneiric) (REQUIRED)
EOM
}

LTS=
BACKPORT=

while getopts "hl:b:" opt
do
    case "$opt" in
        l) LTS="$OPTARG";;
        b) BACKPORT="$OPTARG";;
        h) help ; exit 0;;
        ?) help;;
    esac
done

if [ -z "$LTS" ] || [ -z "$BACKPORT" ]; then
    help
    exit 1
fi

chunk=$(mktemp -t add-backport-kernel-XXXXXX)

echo "Updating 00boilerplate.linux..."
echo "" > $chunk
grep "^.*_linux:" active/00boilerplate.linux | sed -e "s/_linux:.*/_linux-lts-backport-${BACKPORT}: DNE/" >> $chunk
sed -i -e "s/^${LTS}_linux-lts-backport-${BACKPORT}:.*/${LTS}_linux-lts-backport-${BACKPORT}: needs-triage/" $chunk
sed -i -e "s/^Patches_linux-lts-backport-${BACKPORT}:.*/Patches_linux-lts-backport-${BACKPORT}:/" $chunk
sed -i -e "s/^upstream_linux-lts-backport-${BACKPORT}:.*/upstream_linux-lts-backport-${BACKPORT}: needs-triage/" $chunk
cat $chunk >> active/00boilerplate.linux

echo "Adding new backport to existing CVEs..."
for i in $(grep "^${LTS}_linux:" active/CVE* | cut -d: -f1 | sort -u); \
do cat $chunk >> $i; \
done

rm -f $chunk

echo "Updating status of existing CVEs..."
for i in $(cd active && grep "^${BACKPORT}_linux: " CVE* | cut -d" " -f2 | sort -u | grep -v released); do
	./scripts/mass-cve-edit -p linux-lts-backport-$BACKPORT -r $LTS -s $i $(cd active && grep "^${BACKPORT}_linux: $i" CVE* | cut -d: -f1 | sort -u)
done

echo "Updating status of released CVEs (ok if empty and prints help)..."
./scripts/mass-cve-edit -p linux-lts-backport-$BACKPORT -r $LTS -s not-affected $(cd active && grep "^${BACKPORT}_linux: released" CVE* | cut -d: -f1 | sort -u)
