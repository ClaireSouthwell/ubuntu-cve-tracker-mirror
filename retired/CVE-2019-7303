Candidate: CVE-2019-7303
CRD:
PublicDate: 2019-03-21
PublicDateAtUSN: 2019-03-21
References:
 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-7303
 https://wiki.ubuntu.com/SecurityTeam/KnowledgeBase/SnapIoctlTIOCSTI
 https://usn.ubuntu.com/usn/usn-3917-1
Description:
 The snapd seccomp filter is configured to block ioctl(..., TIOCSTI, ...) but
 in snapd < 2.37.4 this could be circumvented on 64 bit architectures by
 setting any high bits in the 2nd argument to ioctl.
Ubuntu-Description:
Notes:
 jdstrand> this is a kernel limitation that is documented in the seccomp man
  page, but arguably the kernel should perform the seccomp filter check on the
  value that it is ultimately going to process (which likely means an
  improvement to libseccomp to generate the appropriate BPF to do this)
 jdstrand> this was further complicated by the fact that the kernel and glibc
  disagree on the function prototype of ioctl, where the glibc man page
  documents it as unsigned long and the kernel treats it as int (note, the
  tty_ioctl man page (which is the one that documents TIOCSTI) lists the ioctl
  second argument as an int)
 jdstrand> due to miscoordination, 2.37.4 is going to -updates first as part of
  the regular SRU cycle. Once that passes, we'll rebuild and publish to the
  security pocket and issue a USN.
 jdstrand> once this issue is public, the global profile initialization code
  that is used to address this issue will also be made public
Bugs: 
 https://launchpad.net/bugs/1812973
Priority: medium
Discovered-by: Jann Horn
Assigned-to: zyga

Patches_snapd:
 upstream: https://github.com/snapcore/snapd/pull/6516 (part 1)
 upstream: https://github.com/snapcore/snapd/pull/6533 (part 2)
upstream_snapd: released (2.37.4)
precise/esm_snapd: DNE
trusty_snapd: released (2.37.4~14.04)
xenial_snapd: released (2.37.4)
bionic_snapd: released (2.37.4+18.04)
cosmic_snapd: released (2.37.4+18.10)
devel_snapd: not-affected (2.37.4+19.04)
