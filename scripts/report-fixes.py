#!/usr/bin/python

# Author: Kees Cook <kees@ubuntu.com>
# Copyright (C) 2008 Canonical Ltd.
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 2 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.
#
# Fetch the USN database first.  Override location with --database
#  wget http://people.ubuntu.com/~ubuntu-security/usn/database.pickle
#
import cPickle, sys, os, os.path, optparse, usn_lib
from source_map import version_compare

parser = optparse.OptionParser()
#parser.add_option("-v", "--verbose", dest="verbose", help="Report logic while processing USNs", action='store_true')
parser.add_option("-D", "--database", help="Specify location of USN data (default 'database.pickle')", default="database.pickle")
parser.add_option("-R", "--reverted", help="Specify location of reverted CVE list (default 'reverted-CVEs.txt')", default="reverted-CVEs.txt")
parser.add_option("-d", "--debug", dest="debug", help="Report additional debugging while processing USNs", action='store_true')
(opt, args) = parser.parse_args()

reverted = usn_lib.get_reverted(opt.reverted)
db       = usn_lib.load_database(opt.database)

# Report CVEs fixed _after_ the "after" version, up to and including "last"
# i.e. (after,last]
try:
    release = args.pop(0)
    src     = args.pop(0)
    after   = args.pop(0)
    last    = args.pop(0)
except:
    print >>sys.stderr, 'Usage: %s [OPTIONS] RELEASE SOURCE_PKG ABOVE_VER THIS_OR_LOWER_VER' % (sys.argv[0])
    sys.exit(1)

if (opt.debug):
    print "Searching for %s in %s version (%s, %s]" % (src, release, after, last)

for usn in sorted(db, cmp=version_compare):
    # This USN is ancient and lacks any CVE information
    if not db[usn].has_key('cves'):
        if (opt.debug):
            print "%s lacks CVEs" % (usn)
        continue
    # This USN did not include any updates for the requested release
    if not db[usn]['releases'].has_key(release):
        if (opt.debug):
            print "%s lacks release for %s" % (usn, release)
        continue
    # This USN is ancient and lacks source package information
    if not db[usn]['releases'][release].has_key('sources'):
        if (opt.debug):
            print "%s lacks source packages for %s" % (usn, release)
        continue
    # This USN did not include updates for the requested package
    if not db[usn]['releases'][release]['sources'].has_key(src):
        if (opt.debug):
            print "%s lacks update for %s" % (usn, src)
        continue

    version = db[usn]['releases'][release]['sources'][src]['version']

    if version_compare(version, after)>0 and version_compare(version, last)<=0:
        print 'USN-%s (%s)' % (usn, version)
        for cve in sorted(db[usn]['cves']):
            print "\t" + cve
