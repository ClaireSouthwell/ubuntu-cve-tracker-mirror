----------
UBUNTU CVE
----------
With the newly revamped ubuntu-cve, it is much more like Debian's kernel-sec
list where you have these directories:

active/		(CVEs that need attention)
ignored/	(CVEs to be ignored, but want to track with special status/notes)
retired/	(CVEs that have been addressed)

ignored/ also has the file 'not-for-us.txt'.

check-cves pulls down the CVE list from MITRE, cross-references it with
ignored/, ignored/not-for-us.txt and retired/, then adds the new CVEs to
active/.  This is normally run on Wednesday, as this is when MITRE updates
its database.

Run like this:
./check-cves
./check-cves http://cve.mitre.org/data/downloads/allitems.xml
./check-cves <file>

Eg:
wget http://cve.mitre.org/data/downloads/allitems.xml
./check-cves ./allitems.xml

When running check-cves:
'a'dd 		to add to active/ (be sure to set the Priority to very-low,
		low, medium, high or critical if you can.  If don't know the
		severity yet can just not add the priority).  Also add to the
		Assigned-to if appropriate.
'i'gnore 	to add to ignored/not-for-us.txt
's'kip 		don't do anything (will come up next time)

* Note: it may take a few seconds before prompts, as allitems.xml is a large
file.

*** IMPORTANT ***
ubuntu-cve is PUBLIC.  All comments should be professional, and there should be
no embargoed items in ubuntu-cve (until they are made public that is).


When a CVE fix is released, must manually update the CVE file in active/
with the appropriate information.  Then 'verify-report.py' (see below) 
and 'bzr mv' it to retired/.

Useful commands are (all are run from within the active/ directory):

Full listing:
../scripts/ubuntu-table

Full listing, flagging packages in main:
../scripts/ubuntu-table --supported

Show all active CVEs for supported (main) packages:
../scripts/ubuntu-table --supported 2>/dev/null | grep SUPPORTED

Number of active CVEs that are in main:
../scripts/ubuntu-table --supported 2>/dev/null | grep SUPPORTED | wc -l

Show CVEs for a particular source package:
../scripts/ubuntu-table --supported 2>/dev/null | grep <pkgname>

Show CVEs with undefined priorities (ie untriaged):
../scripts/ubuntu-table --untriaged

Create/edit a new CVE (eg if don't want to wait for check-cves):
../scripts/active_edit -p package -c CVE-XXXX-XXXX

Verify a report (always run this before doing a bzr commit):
../scripts/verify-report.pl CVE-XXXX-XXXX

See the status of specific CVEs:
../scripts/cve_status CVE-2006-4519 CVE-2007-2949 CVE-2007-3741

See the status of specific CVEs without viewing the full entry:
../scripts/cve_status -s CVE-2006-4519 CVE-2007-2949 CVE-2007-3741

See all bugs with priority of medium or higher:
../scripts/ubuntu-table --supported | egrep -v '[[:space:]]+(untriaged|very-low|low)$'

Retiring items:
$(../scripts/ubuntu-table 2>&1 >/dev/null | grep ^retired | cut  -d" " -f2); do bzr mv $cve ../retired; done


Non-CVE Vulnerabilties
----------------------
If find a non-CVE assigned vulnerability, then:

1. report the bug to Debian
2. in ubuntu-cve, use 00boilterplate and create CVE-NEED-0001
3. if desired, email vendor-sec@lst.de and Cc cve@mitre.org asking for a CVE
4. file a bug in LP (assign to security-team if main, motu-swat if universe

Doing '1' may be enough if its in universe and not high priority, as
it will eventually find its way back to Ubuntu.

