#!/usr/bin/python

# Author: Kees Cook <kees@ubuntu.com>
# Copyright (C) 2011 Canonical Ltd.
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 2 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.
#
# Fetch the USN database and pass it as the first argument
#  wget http://people.canonical.com/~ubuntu-security/usn/database.pickle
#  ./scripts/expired-usns.py database.pickle
#
# This will report USNs that only apply to EOL releases
#
import cPickle, sys, os, os.path, cve_lib, optparse, usn_lib

parser = optparse.OptionParser()
parser.add_option("-d", "--debug", help="Report additional debugging while loading USNs", action='store_true')
parser.add_option("-v", "--verbose", help="Report releases for each reported USN", action='store_true')
(opt, args) = parser.parse_args()

cves = dict()

config = cve_lib.read_config()

dbfile = None
if len(args) < 1:
    dbfile = config['usn_db_copy']
else:
    dbfile = args[0]

if opt.debug:
    print >>sys.stderr, "Loading %s ..." % (dbfile)
db = usn_lib.load_database(dbfile)

for usn in sorted(db, key=lambda a:map(int,a.split('-'))):
    if opt.debug:
        print >>sys.stderr, 'Checking %s' % (usn)
    if not db[usn].has_key('cves'):
        continue

    supported = False
    eol = []
    for rel in sorted(db[usn]['releases']):
        eol.append(rel)
        # Logic is a bit side-ways here to account for releases that cve_lib
        # doesn't even admit to knowing about.
        if rel in cve_lib.releases and not rel in cve_lib.eol_releases:
            supported = True

    if not supported:
        suffix = ""
        if opt.verbose:
            suffix = " (%s)" % (", ".join(eol))
        print "%s%s" % (usn, suffix)
