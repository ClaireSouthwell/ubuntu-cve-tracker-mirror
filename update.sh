#!/bin/bash
set -e
cd /home/ubuntu-security/graphing
REL=lucid
INDEX=11

# Generate supported binary package counts data
COUNT=$(zgrep ^Package: /srv/archive.ubuntu.com/ubuntu/dists/$REL/{main,restricted}/binary-i386/Packages.gz | wc -l)
echo "$REL $INDEX $COUNT" > $REL.data

cat supported.data.template > supported.data
LAST=$(tail -n1 supported.data.template | cut -c2-)
echo $LAST $COUNT >> supported.data

# Generate supported source package counts data
COUNT=$(zgrep ^Package: /srv/archive.ubuntu.com/ubuntu/dists/$REL/{main,restricted}/source/Sources.gz | wc -l)
echo "$REL $INDEX $COUNT" > ${REL}-src.data

cat supported-src.data.template > supported-src.data
LAST=$(tail -n1 supported-src.data.template | cut -c2-)
echo $LAST $COUNT >> supported-src.data

# Plot historical package counts
./plot.py | gnuplot

# Plot supported packages
gnuplot < supported.plot

# Publish!
cp packages.png sources.png supported.png supported-src.png ~/public_html/graphs/


# Graph Open CVEs
NOW=$(date +'%Y-%m-%d')
CURRENT=$(echo -n "$NOW "; cd /home/ubuntu-security/bzr-pulls/cve-tracker; ./scripts/report-todo-plot -S)
cp CVE.data.template CVE.data
if [ $(date +%a) = "Sun" ] && ! grep -q ^"$NOW" CVE.data.template; then
    # Save weekly information as a snapshot
    echo "$CURRENT" >> CVE.data.template
fi
echo "$CURRENT" >> CVE.data
gnuplot < open-cves.plot
gnuplot < open-cves-all.plot

XSTART=$(date -d "6 months ago" +%Y-%m-%d)
perl -p -e "s/^set xrange.*/set xrange [\"$XSTART\":]/;" open-cves-6mon.plot.template > open-cves-6mon.plot
perl -p -e "s/^set xrange.*/set xrange [\"$XSTART\":]/;" open-cves-all-6mon.plot.template > open-cves-all-6mon.plot
gnuplot < open-cves-6mon.plot
gnuplot < open-cves-all-6mon.plot

# Publish!
cp open-cves*.png ~/public_html/cve/


# Graph published USN counts
XSTART=$(date -d "6 months ago" +%Y-%m)
perl -p -e "s/^set xrange.*/set xrange [\"$XSTART\":]/;" usns-6mon.plot.template > usns-6mon.plot
~/bin/usn.sh --db ~/public_html/usn/database.pickle --list-graph > USN.data
head -n -1 USN.data > USN.data.truncated
gnuplot < usns.plot
gnuplot < usns-6mon.plot
# Publish!
cp usns.png usns-6mon.png ~/public_html/graphs/


# Graph published CVE counts/priorities
perl -p -e "s/^set xrange.*/set xrange [\"$XSTART\":]/;" cve-updates-6mon.plot.template > cve-updates-6mon.plot
(cd ~/bzr-pulls/cve-tracker && ./scripts/plot-usns.py --target cve) > cve-updates.data
head -n -1 cve-updates.data > cve-updates.data.truncated
gnuplot < cve-updates.plot
gnuplot < cve-updates-6mon.plot
# Publish!
cp cve-updates.png cve-updates-6mon.png ~/public_html/graphs/

for REL in $(./supported-list.py)
do
	perl -p -e "s/^set title.*/set title \"Exposure to Open CVEs ($REL)\"/" exposure.plot.template > exposure.plot
	(cd ~/bzr-pulls/cve-tracker; ./scripts/report-lifetime.py --action plot --buckets 0,1,2,3,4,5,6,7,14,30,60,-1 --html ~/public_html/graphs/exposure-$REL.html $REL) > exposure-$REL.data
	cp exposure-$REL.data exposure.data
	gnuplot < exposure.plot
	cp exposure.png ~/public_html/graphs/exposure-$REL.png
	cp exposure-$REL.html ~/public_html/graphs/exposure-$REL.html
done
perl -p -e "s/^set title.*/set title \"Exposure to Open CVEs (all)\"/" exposure.plot.template > exposure.plot
(cd ~/bzr-pulls/cve-tracker; ./scripts/report-lifetime.py --action plot --buckets 0,1,2,3,4,5,6,7,14,30,60,-1 --html ~/public_html/graphs/exposure-all.html ) > exposure.data
gnuplot < exposure.plot
cp exposure.png ~/public_html/graphs/exposure-all.png
cp exposure-all.html ~/public_html/graphs/exposure-all.html

# Affected software counts
./pkgs-update.sh
