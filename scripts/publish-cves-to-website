#!/bin/bash

cd "${0%/*}"
cd ..
pwd

REPO=$(basename $(git rev-parse --show-toplevel))
if [[ ! $REPO =~ ^ubuntu-cve-tracker$ ]] ; then
	echo "Top level repository '$REPO' is not 'ubuntu-cve-tracker', exiting" >&2
	exit 1
fi

BRANCH=$(git branch | awk '/*/ {print$2}')
if [[ ! $BRANCH =~ ^master$ ]] ; then
	echo "Branch '$BRANCH' is not 'master', exiting" >&2
	exit 1
fi

HASH_CACHE=~/.publish-cves-to-website-hash

if [[ -f $HASH_CACHE ]] ; then 
	PREVIOUS_HASH=$(cat $HASH_CACHE)
        CONTAINING_BRANCH=$(git branch --contains $PREVIOUS_HASH | awk '/*/ {print$2}')
	if [[ ! $CONTAINING_BRANCH =~ ^master$ ]] ; then
		echo "Master branch does not contain commit '$PREVIOUS_COMMIT', exiting" >&2
		exit 1
	fi
	CHANGES=$(git diff --name-status ${PREVIOUS_HASH}.. | awk '/^(M|A)/ {print $2}')
else
	echo "No previous commit hash found"
	while true; do
		read -p "Do you want to import all of UCT? " yn
		case $yn in
			[Yy]* ) CHANGES="active retired ignored/not-for-us.txt" ; break ;;
			[Nn]* ) exit  ;;
			* ) echo "Please answer yes or no" ;;
		esac
	done
fi

CURRENT_HASH=$(git rev-parse HEAD)

if [[ ${#CHANGES} -gt 45 ]] ; then
	DISPLAY_CHANGES="${CHANGES:0:45}..."
else
	DISPLAY_CHANGES="${CHANGES}"
fi

echo Running ./scripts/publish-cves-to-website-api.py ${DISPLAY_CHANGES}

echo

if ./scripts/publish-cves-to-website-api.py --stop $CHANGES ; then
	echo "Writing current hash '$CURRENT_HASH' to $HASH_CACHE"
else
	echo "Failed" >&2
	exit 1
fi
