Running: /home/sarnold/bin/audit-code.sh -c python ./
Scanning './'
== subprocess_spawned() ==
./tools/dpdk_nic_bind.py:119:    return subprocess.Popen(args, stdout=subprocess.PIPE,
./lib/librte_vhost/libvirt/qemu-wrap.py:372:    process = subprocess.Popen(emul_call, shell=True, preexec_fn=os.setsid)

== memory_management() ==
(unsupported type 'python')

== files() ==
./tools/dpdk_nic_bind.py:317:        f = open(filename, "a")
./tools/dpdk_nic_bind.py:350:            f = open(filename, "w")
./tools/dpdk_nic_bind.py:365:        f = open(filename, "a")
./tools/cpu_layout.py:41:fd=open("/proc/cpuinfo")
./app/test/autotest_runner.py:198:		self.logfile = open(logfile, "w")
./app/test/autotest_runner.py:199:		csvfile = open(csvfile, "w")
./app/test/autotest_runner.py:273:					f = open("%s_%s_report.rst" % (self.target,test_name), "w")
./lib/librte_vhost/libvirt/qemu-wrap.py:187:    pidfile = open(qemu_pid, 'r')
./lib/librte_vhost/libvirt/qemu-wrap.py:207:        f = open("/proc/mounts", "r")
./lib/librte_vhost/libvirt/qemu-wrap.py:233:        fd = os.open( us_vhost_path, os.O_RDWR)

== logging() ==

== environment() ==

== privileged() ==

== networking() ==
./tools/dpdk_nic_bind.py:321:    f.write(dev_id)
./tools/dpdk_nic_bind.py:355:            f.write("%04x %04x" % (dev["Vendor"], dev["Device"]))
./tools/dpdk_nic_bind.py:372:        f.write(dev_id)
./app/test/autotest_runner.py:278:						f.write(report)
./app/test/autotest_runner.py:396:			self.logfile.write("Summary\n")
./app/test/autotest_runner.py:397:			self.logfile.write("Target: ".ljust(15) + "%s\n" % self.target)
./app/test/autotest_runner.py:398:			self.logfile.write("Tests: ".ljust(15) + "%i\n" % self.n_tests)
./app/test/autotest_runner.py:399:			self.logfile.write("Failed tests: ".ljust(15) + "%i\n" % self.fails)
./app/test/autotest_runner.py:407:			self.logfile.write(buf.replace("\r",""))
./doc/guides/conf.py:156:        app.connect('doctree-resolved', process_numref)
./lib/librte_vhost/libvirt/qemu-wrap.py:188:    pid = int(pidfile.read())

== http:// ==

== encryption ==

== sql() ==

== tmp() ==
./lib/librte_vhost/libvirt/qemu-wrap.py:181:qemu_pid = "/tmp/%d-qemu.pid" % os.getpid()

== priv_cmds (sudo, gksu, pkexec) ==

== envvars() ==

== webkit() ==

== comments (XXX, FIXME, TODO) ==

== unsafe input mechanisms ==
(unsupported type 'python')

