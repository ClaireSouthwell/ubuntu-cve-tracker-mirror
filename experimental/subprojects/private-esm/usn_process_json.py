#!/usr/bin/env python3

# Consume a JSON file generated by ./esm-package-usns.py and use it to generate
# USN scripts.

import json
import pathlib
import os
import sys
import subprocess

from launchpadlib.launchpad import Launchpad, EDGE_SERVICE_ROOT
from launchpadlib.credentials import Credentials
from launchpadlib.errors import HTTPError

WORK_DIR=os.path.expanduser("~") + "/usneffort/usn"
#WORK_DIR="/tmp/usn"
SCRIPT_DIR=os.environ.get('UCT') + "/scripts"
PPAS = ["ubuntu-esm/esm-infra-security", "ubuntu"]

def load_json(filename):
    with open(sys.argv[1]) as json_file:
        return json.load(json_file)

def download_changes(package, directory):
    print("Downloading {0}...".format(package))
    for ppa in PPAS:
        ret = subprocess.call([SCRIPT_DIR + "/sis-changes", "--download", directory,
            "--ppa", ppa, "--include-eol", "--release", "trusty", package])
        if ret == 0:
            print("Success!")
            break

def create_usn_file(number, filename, path, cve_list):
    print("Generating {0}...".format(filename))
    usn_file = open(filename, "a")
    cmd_line = SCRIPT_DIR + "/sis-generate-usn --include-eol --cves={0} {1} *.changes".format(cve_list, number)
    p = subprocess.Popen(cmd_line, stdout = usn_file, shell = True, cwd = path)
    (output, err) = p.communicate()
    p_status = p.wait()

if not os.environ.get('UCT'):
    print("Need to set UCT envvar!")
elif len(sys.argv) < 2:
    print("You need a json file!")
elif not os.path.isfile(sys.argv[1]):
    print("File not found!")
else:
    data = load_json(sys.argv[1])

    for p in data:
        local_dir = "%s/%s_%s" % (WORK_DIR, p['pkg'], p['version'])
        if not os.path.isdir(local_dir):
            download_changes(p['pkg'], local_dir)

    for p in data:
        local_dir = "{0}/{1}_{2}".format(WORK_DIR, p['pkg'], p['version'])
        number = "12345-1"
        filename = "{0}/{1}_{2}.sh".format(WORK_DIR, p['pkg'], p['version'])

        cve_list = ""
        for cve in p['cves']:
            cve_list += [key for key in cve.keys()][0] + ","

        if not os.path.isfile(filename) and os.path.isdir(local_dir):
            create_usn_file(number, filename, local_dir, cve_list[:-1])
