#!/usr/bin/env python
#
# This script reports how many "updates" (CVEs per package per USN)
# happen per month and per year.
#
# Copyright (C) 2008 Canonical, Ltd
# Author: Kees Cook <kees@ubuntu.com>
import sys, time, usn_lib

reverted = usn_lib.get_reverted()
db = None
try:
    db = usn_lib.load_database(sys.argv[1])
except:
    print >>sys.stderr, "Need to specify the database (eg database.pickle)"
    sys.exit(1)

def report(epoch, usn, cve, pkg, rel):
    print '%s: %s: %s: %s (%s)' % (time.strftime("%Y-%m-%d",time.gmtime(epoch)),usn, cve, pkg, rel)

for usn in db:
    cves = []
    if not db[usn].has_key('cves'):
        #print >>sys.stderr, "Skipped USN lacking 'cves': %s" % (usn)
        cves = ['unknownCVE']
    else:
        cves = db[usn]['cves']

    for cve in cves:
        if ' CVE' in cve:
            print >>sys.stderr, "Bad CVE name (%s) in USN-%s" % (cve, usn)
        #if not cve.startswith('CVE-'):
        #    print >>sys.stderr, "Skipped weird CVE in USN-%s: %s" % (usn,cve)
        #    continue
        ## Skip checking CVEs that were reverted for a given USN
        #if reverted.has_key(usn) and cve in reverted[usn]:
        #    continue

        for rel in db[usn]['releases']:
            if not db[usn]['releases'][rel].has_key('sources'):
                if not db[usn]['releases'][rel].has_key('archs'):
                    # Old USN, lacks either sources or archs, use first binary
                    pkg = db[usn]['releases'][rel]['binaries'].keys()[0]
                    report(db[usn]['timestamp'],usn, cve, pkg, rel)
                else:
                    for filename in db[usn]['releases'][rel]['archs']['source']['urls'].keys():
                        if filename.endswith('.dsc'):
                            pkg = filename.split('/').pop().split('_').pop(0)
                            report(db[usn]['timestamp'],usn, cve, pkg, rel)
            else:
                for pkg in db[usn]['releases'][rel]['sources']:
                    report(db[usn]['timestamp'],usn, cve, pkg, rel)

