#!/usr/bin/env python3
#
# This script lists the packages (and their versions) in a PPA for a given series 
#
# Copyright (C) 2019 Canonical, Ltd
# Author: Mike Salvatore <mike.salvatore@canonical.com>
# License: GPLv3

import lpl_common
import optparse
import sys

def print_error_and_exit(parser, msg):
    print(msg + " \n")
    parser.print_help()
    sys.exit(1)

def parse_options():
    parser = optparse.OptionParser()
    parser.add_option("-r", "--release", help="List packages for this ubuntu series",
            action="store", type="string")
    parser.add_option("-p", "--ppa", help="List packages for this ubuntu series (i.e. \"ubuntu-security/ppa\"",
            action="store", type="string")

    (opt, args) = parser.parse_args()

    if opt.release is None:
        print_error_and_exit(parser, "Error: You must specifiy an ubuntu release with the '-r' or '--release' option")

    if opt.ppa is None:
        print_error_and_exit(parser, "Error: You must specifiy an ppa with the '-p' or '--ppa' option")

    return (opt, args)

def get_records_from_ppa(opt):
    lp = lpl_common.connect()
    distribution = lp.distributions['ubuntu']
    ubuntu = lp.distributions['ubuntu']
    series = ubuntu.getSeries(name_or_version=opt.release)
    archive, group, ppa = lpl_common.get_archive(opt.ppa, lp, False, distribution=distribution)

    return archive.getPublishedSources(status='Published', distro_series=series)


(opt, args) = parse_options()
records = get_records_from_ppa(opt)

for record in records:
    print('%s:%s' % (record.source_package_name, record.source_package_version))
