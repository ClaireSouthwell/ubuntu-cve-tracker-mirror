Running: /home/sarnold/bin/audit-code.sh -c C ./
Scanning './'
== subprocess_spawned() ==
./gpg-parse.c:42:    rc = system(GPG_PROG" --options /dev/null < /dev/null > /dev/null 2>&1");
./gpg-parse.c:61:    if ((ds = popen(buf, "r")) == NULL) {
./gpg-parse.c:127:	execl(GPG_PROG, "gpg", GPG_ARGS, "--list-packets", "-q", "-", NULL);
./gpg-parse.c:193:	execl(GPG_PROG, "gpg", GPG_ARGS, "--keyring",

== memory_management() ==
./xml-parse.c:52:static void *xmalloc(size_t size) {
./xml-parse.c:53:    register void *p = malloc(size);
./xml-parse.c:103:	cur_grp = (struct group *)obstack_alloc(&deb_obs, sizeof(struct group));
./xml-parse.c:151:        cur_m = (struct match *)obstack_alloc(&deb_obs, sizeof(struct match));

== files() ==
./xml-parse.c:253:    if ((pol_fs = fopen(filename, "r")) == NULL) {
./gpg-parse.c:61:    if ((ds = popen(buf, "r")) == NULL) {
./gpg-parse.c:119:    if ((ds_read = fdopen(pread[0], "r")) == NULL ||
./gpg-parse.c:120:	 (ds_write = fdopen(pwrite[1], "w")) == NULL)
./debsig-verify.c:125:    if ((fd = mkstemp(tmp_data)) == -1 || (fp = fdopen(fd, "w+")) == NULL) {
./debsig-verify.c:190:	if ((fd = mkstemp(tmp_sig)) == -1 || (fp = fdopen(fd, "w+")) == NULL) {
./debsig-verify.c:359:    if ((deb_fs = fopen(deb, "r")) == NULL)

== logging() ==
./ar-parse.c:63:		  strerror(errno));
./ar-parse.c:73:	    if (ferror(deb_fs))
./ar-parse.c:75:			  strerror(errno));
./ar-parse.c:100:	if (fseek(deb_fs, mem_len + (mem_len & 1), SEEK_CUR) == -1 && ferror(deb_fs))
./ar-parse.c:102:			   "findMember: error during file seek (%s)", strerror(errno));
./xml-parse.c:46:#define parse_error(fmt, args...) \
./xml-parse.c:69:	    parse_error("policy parse error: 'Policy' found at wrong level");
./xml-parse.c:74:		    parse_error("policy name space != " DEBSIG_NAMESPACE);
./xml-parse.c:76:		parse_error("Policy element contains unknown attribute '%s'",
./xml-parse.c:81:	    parse_error("policy parse error: 'Origin' found at wrong level");
./xml-parse.c:91:		parse_error("Origin element contains unknown attribute '%s'",
./xml-parse.c:96:	    parse_error("Origin element missing Name or ID attribute");
./xml-parse.c:100:	    parse_error("policy parse error: 'Selection/Verification' found at wrong level");
./xml-parse.c:130:			parse_error("MinOptional requires a numerical value");
./xml-parse.c:134:		parse_error("Selection/Verification element contains unknown attribute '%s'",
./xml-parse.c:142:	    parse_error("policy parse error: Match element found at wrong level");
./xml-parse.c:146:	    parse_error("policy parse error: No current group for match element");
./xml-parse.c:176:			parse_error("Expiry requires a numerical value");
./xml-parse.c:180:                parse_error("Match element contains unknown attribute '%s'",
./xml-parse.c:189:		parse_error("Required must have a Type and File attribute");
./xml-parse.c:193:		parse_error("Optional must have a Type and File attribute");
./xml-parse.c:197:		parse_error("Reject must have a Type attribute");
./xml-parse.c:215:	    parse_error("Selection/Verification block does not contain any "
./xml-parse.c:255:		  filename, strerror(errno));
./gpg-parse.c:62:	perror("gpg");
./gpg-parse.c:143:    if (ferror(ds_write))
./gpg-parse.c:162:    if (ferror(ds_read))
./debsig-verify.c:127:		  tmp_data, strerror(errno));
./debsig-verify.c:192:		      tmp_sig, strerror(errno));
./debsig-verify.c:295:ds_catch_fatal_error(void)
./debsig-verify.c:302:ds_print_fatal_error(const char *emsg, const void *data)
./debsig-verify.c:360:	ds_fail_printf(DS_FAIL_INTERNAL, "could not open %s (%s)", deb, strerror(errno));
./debsig-verify.c:378:		       "Could not open Origin dir %s: %s\n", buf, strerror(errno));

== environment() ==

== privileged() ==

== networking() ==
./ar-parse.c:72:	if (fread(&arh, 1, sizeof(arh),deb_fs) != sizeof(arh)) {
./xml-parse.c:265:	size_t len = fread(buf, 1, sizeof(buf), pol_fs);
./gpg-parse.c:134:    t = fread(buf, 1, sizeof(buf), deb_fs);
./gpg-parse.c:137:	    fwrite(buf, 1, len, ds_write);
./gpg-parse.c:139:	    fwrite(buf, 1, t, ds_write);
./gpg-parse.c:141:	t = fread(buf, 1, sizeof(buf), deb_fs);
./debsig-verify.c:102:        t = fread(buf, 1, sizeof(buf), in);
./debsig-verify.c:103:        fwrite(buf, 1, (t > len) ? len : t, out);

== http:// ==
./debsig.h:38:#define DEBSIG_NAMESPACE "http://www.debian.org/debsig/"SIG_VERSION"/"

== encryption ==
./misc.c:17: * along with this program.  If not, see <https://www.gnu.org/licenses/>.
./ar-parse.c:17: * along with this program.  If not, see <https://www.gnu.org/licenses/>.
./debsig.h:17: * along with this program.  If not, see <https://www.gnu.org/licenses/>.
./xml-parse.c:17: * along with this program.  If not, see <https://www.gnu.org/licenses/>.
./gpg-parse.c:17: * along with this program.  If not, see <https://www.gnu.org/licenses/>.
./debsig-verify.c:17: * along with this program.  If not, see <https://www.gnu.org/licenses/>.

== sql() ==

== tmp() ==
./debsig-verify.c:124:    strncpy(tmp_data, "/tmp/debsig-data.XXXXXX", sizeof(tmp_data));
./debsig-verify.c:189:	strncpy(tmp_sig, "/tmp/debsig-sig.XXXXXX", sizeof(tmp_sig));

== priv_cmds (sudo, gksu, pkexec) ==

== envvars() ==

== webkit() ==

== comments (XXX, FIXME, TODO) ==
./debsig-verify.c:65:	/* XXX: If the match doesn't specify an ID, we need to check to
./debsig-verify.c:124:    strncpy(tmp_data, "/tmp/debsig-data.XXXXXX", sizeof(tmp_data));
./debsig-verify.c:189:	strncpy(tmp_sig, "/tmp/debsig-sig.XXXXXX", sizeof(tmp_sig));

== unsafe input mechanisms ==

