#!/usr/bin/python
# -*- coding: utf-8 -*-

# Author: Emilia Torino <emilia.torino@canonical.com>
# Copyright (C) 2008 Canonical Ltd.
#
# Reports which CVEs were fixed for a given private release
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 3 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.
#
# Fetch embargoed repository first
# Call this script indicating the release to get reports from as well as the time period for filtering results:
# scripts/report_esm_usns_and_cves.py trusty --all-time
# scripts/report_esm_usns_and_cves.py trusty --since 1556593200

import argparse
import os
import glob
import sys
import subprocess
from report_fixes_by_usn import get_usns_and_cves

arg_parser = argparse.ArgumentParser(description='Counts CVEs for trusty/esm')
group = arg_parser.add_mutually_exclusive_group(required=True)
group.add_argument('-a', '--all-time', action='store_true', help="get all CVEs since ESM inception")
group.add_argument('-s', '--since', action='store', help="Report only CVEs fixed after this date (in seconds "
                                                               "from UTC)", default=0)
args, extra_arg = arg_parser.parse_known_args()
release = extra_arg[0]

private_esm_dir = "embargoed/cves/subprojects/private-esm"
if 'UCT' in os.environ:
    private_esm_dir = os.environ['UCT'] + "/embargoed/subprojects/private-esm"
else:
    print >> sys.stderr, 'Please setup UCT before running this script'
    sys.exit(1)

if not os.path.isdir(private_esm_dir):
    print >> sys.stderr, 'Private ESM directory not found'
    sys.exit(1)

usns, cves = get_usns_and_cves(release, None, None, None, None, True, "database.pickle", None,
                                             sys.float_info.max, float(args.since), None, "meta_lists/reverted-CVEs.txt")

os.chdir(private_esm_dir)
private_cves = [f for f in glob.glob1(".", "CVE-*")]
report_cves=[]
if args.since:
    since_date = float(args.since)
    for cve in private_cves:
        if os.path.isfile('../esm-universe/' + cve):
            if release in open('../esm-universe/' + cve).read():
                args = ['git', 'log', '-1', '--format=%at', '../esm-universe/' + cve]
            else:
                args = ['git', 'log', '-1', '--format=%at', cve]
        else:
            args = ['git', 'log', '-1', '--format=%at', cve]
        cve_creation_timestamp = (float(subprocess.check_output(args)))
        if cve_creation_timestamp >= since_date:
            report_cves.append(cve)
    private_cves = report_cves

unique_cves_list_across_universe_and_main = [cves, private_cves]
results_union = set().union(*unique_cves_list_across_universe_and_main)

print "Total USNs published for %s ESM: %d " % (release, len(usns))
print "Total CVEs fixed for %s ESM main: %d " % (release, len(cves))
print "Total CVEs fixed for %s ESM universe: %d " % (release, len(private_cves))
print "Total CVEs fixed for %s ESM main+universe: %d " % (release, len(results_union))
if len(results_union) != len(cves) + len(private_cves):
    print "CVEs present in both main and universe: " +  ", ".join (list(set(cves).intersection(private_cves)))



