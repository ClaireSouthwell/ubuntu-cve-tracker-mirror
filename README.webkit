webkit
------

This is the main WebKit source package in Ubuntu. It is actually the
WebKitGTK+ upstream project. See: http://webkitgtk.org/

Current stable tree (1.4.x) is here:
http://svn.webkit.org/repository/webkit/releases/WebKitGTK/webkit-1.4.0

Previous stable tree (1.2.x) was here:
http://gitorious.org/webkitgtk/stable/commits/master

qt4-x11
-------

On Jaunty and later, this contains a copy of the QTWebKit source code in
the src/3rdparty/webkit directory.

Upstream for QTWebKit is http://trac.webkit.org/wiki/QtWebKit

On Maverick and later, the QTWebKit source code isn't built, it has been
replaced by the qtwebkit-source package.

In Lucid, the following applications in the Kubuntu default install use
QtWebKit:
 * k3b: does not process web content. Creates its own html which is fed into
   webkit. Bugs here would be in k3b input sanitization, not webkit.
 * amarok: does process web content from wikipedia. Links outside of wikipedia
   are handled by the default browser. Content from wikipedia is considered
   filtered
 * quassel: does process web content via preview pop-ups. Can be compiled without
   webkit support (USN pending)
 * language-selector-qt: does not process unfiltered web content
 * software-properties-kde: does not process unfiltered web content
 * kdebase-runtine: plasmapkg uses the plasma javascript script engine, but is
   not exposed to unfiltered web content

The following applications on the Kubuntu DVD use QtWebKit:
 * arora: does process unfiltered web content. Updates to webkit in qt4-x11
   should be tested with this browser
   * arora is only on the Kubuntu DVD, not the default install but did not
     receive a proper review for main inclusion. Because upstream Qt does
     not provide security updates for its version of webkit, it is
     unmaintainable and therefore qt4-x11 webkit CVEs should be ignored or
     not included at all. (see LP: #387384 for details on its inclusion in
     main).

qtwebkit-source
---------------

This package exists on Maverick and later, and contains a copy of the
QTWebKit source code. It is used instead of the QTWebKit code in qt4-x11.

qtwebkit-opensource-src
-----------------------

This package exists in Raring and later, and contains a copy of the QTWebKit
source code (both Webkit1 and Webkit2). It is used by the Ubuntu SDK. It also
has code to use the V8 javascript engine, but uses the JavaScriptCore (JSC)
engine only on Ubuntu.

kdelibs
-------

WebKit was originally a fork of khtml from kdelibs. Codebase doesn't look
the same anymore.

kde4libs
--------

WebKit was originally a fork of khtml from kdelibs. Codebase doesn't look
the same anymore.

webkitkde
---------

This is just a wrapper, and contains no WebKit code.

chromium-browser
----------------

This package contains a fork of the WebKit code base (aka 'Blink'). It is
maintained separately by Google and is tracked in the 'chromium-browser'
boilerplate.

oxide
-----

Oxide is bindings for the chromium content api and therefore contains a fork
of the webkit code base (aka, 'Blink'). The chromium content api is maintained
separately by Google and Oxide is maintained by Canonical. Oxide is tracked in
the 'chromium-browser' boilerplate.

CVE Triage
----------
active/00boilerplate.webkit is used to capture the source package relationships
when triaging CVEs for webkit (ie, you only need to specify 'webkit' as the
source package).

When a CVE comes out MITRE generally assigns a CVE to chromium and webkit
separately, unless the chromium stable release text explicitly states there was
a problem in webkit. Considering this, the current triage practice is that we
will treat chromium and webkit separately (since that is what MITRE does) and
therefore if a CVE is listed for chromium only, we will not add webkit to the
tracker for that CVE.

This policy means that we will need to be careful to watch for CVE description
updates when using check-cves, and add webkit to a chromium CVE if MITRE does
(but changes to CVE description text should always be reviewed before
committing anyway).

Due to various upstreams' release models, support for webkit is limited to new
upstream minor version releases only. See
https://wiki.ubuntu.com/SecurityTeam/FAQ#webkit for details.
