#!/usr/bin/python
#
# Author: Jamie Strandboge <jamie@ubuntu.com>
# Copyright (C) 2012 Canonical Ltd.
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 2 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.
#
# Outputs a rather gross html dashboard for the security team

import datetime
import optparse
import os
import signal
import subprocess
import sys

def subprocess_setup():
    # Python installs a SIGPIPE handler by default. This is usually not what
    # non-Python subprocesses expect.
    signal.signal(signal.SIGPIPE, signal.SIG_DFL)

def cmd(command, input = None, stderr = subprocess.STDOUT, stdout = subprocess.PIPE, stdin = None, timeout = None):
    '''Try to execute given command (array) and return its stdout, or return
    a textual error if it failed.'''

    try:
        sp = subprocess.Popen(command, stdin=stdin, stdout=stdout, stderr=stderr, close_fds=True, preexec_fn=subprocess_setup)
    except OSError, e:
        return [127, str(e)]

    out, outerr = sp.communicate(input)
    # Handle redirection of stdout
    if out == None:
        out = ''
    # Handle redirection of stderr
    if outerr == None:
        outerr = ''
    return [sp.returncode,out+outerr]

def _get_css():
    '''CSS for reports'''
    css = '''
<style type="text/css">
h1, h2, h3, h4, h5 {
 color: #3b2e1e;
}
table {
 border-collapse: collapse;
 border: 0;
 width: 100%;
}
th {
 border: 1px solid #3b2e1e;
 color: #3b2e1e;
 width: 50%;
}
/* basic styling */
td {
 width: 50%;
 border: 1px solid #3b2e1e;
 text-align: left;
 vertical-align: top;
 padding-top: 0.1em;
 padding-bottom: 0.1em;
 padding-left: 0.5em;
 padding-right: 0.5em;
 background-color: white;
 font-size: smaller;
}
td.override {
 border: 0;
}
</style>
'''
    return css


def get_dashboard_html(rel):
    gen_skipped = "linux,webkit,qt4-x11,qtwebkit-source,firefox,thunderbird"
    todo_gen = get_todo_numbers(skipped=gen_skipped)
    spec_only = "linux,webkit,qt4-x11,qtwebkit-source,firefox,thunderbird"
    todo_spec = get_todo_numbers(only=spec_only)

    s = '''<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>Ubuntu Security Dashboard</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="author" content="Canonical Ltd, Jamie Strandboge" />
<meta name="description" content="Ubuntu Security Dashboard" />
<meta name="copyright" content="Canonical Ltd" />
%s
</head>
<body>
<h2>Ubuntu Security Dashboard</h2>
<table>
<tr>
<th>Development</th><th>Stable</th>
</tr>
<tr>
<td>
<ul>
<li><a href='http://status.ubuntu.com/ubuntu-%s/canonical-security.html'>Security team's work items status</a></li>
<li><a href='http://reports.qa.ubuntu.com/reports/qa/qa-open-bugs.html'>QA team's open bugs</a></li>
<li><a href='https://errors.ubuntu.com/'>Foundation team's bugs (Whoopsie)</a></li>
<li><a href='http://status.qa.ubuntu.com/reports/kernel-bugs/reports/rls-q-tracking-bugs.html'>Release team's tracking bugs</a></li>
</ul>
<div id="burndown"><img src="http://status.ubuntu.com/ubuntu-%s/canonical-security.svg" title="http://status.ubuntu.com/ubuntu-%s/canonical-security.svg" height="300" width="600" /></div>
</td>
<td>
<p>Generalist: %s (skipped %s)</p>
<p>Specialist: %s (only %s)</p>
<p><a href="http://www.ubuntu.com/usn/">USNs published per month</a>:</p>
<table>
<tr>
<td class="override">
<div id="usns"><img alt="USNs from last 12 months" src="http://people.canonical.com/~ubuntu-security/metrics/USN_all_12.png" height="275" width="300" frameborder="0"/></div>
</td>
<td class="override">
<div id="usns"><img alt="USNs from last 6 months" src="http://people.canonical.com/~ubuntu-security/graphs/usns-6mon.png" height="275" width="300" frameborder="0"/></div>
</td>
</tr>
</table>
</td>
</tr>
<tr>
<td colspan=2>
<p><a href='http://people.canonical.com/~jamie/wi/%s-canonical-security.html'>Security team's work item stats</a>:</p>
<iframe id="workitems" src="http://people.canonical.com/~jamie/wi/%s-canonical-security_minimal.html" width="100%%" height="200" frameborder="0"></iframe>
</td>
</tr>
</table>

<div id="footer">
&copy; Canonical Ltd. 2007-%d
</div>
</body>
</html>
''' % (_get_css(), rel, rel, rel, todo_gen, gen_skipped, todo_spec, spec_only, rel, rel, datetime.date.today().year)
    return s

def get_todo_numbers(skipped=None, only=None):
    exe = os.path.join(os.path.dirname(sys.argv[0]), 'report-todo-numbers')
    args = ['--show-unique-sources', '--skip-low', '-E']
    if skipped:
        args.append('--skip-packages=%s' % skipped)
    elif only:
        args.append('--only-packages=%s' % only)
    rc, report = cmd([exe] + args + ['--', '-S'])

    s = ""
    for line in report.splitlines():
        if " supported " in line:
            return line.lstrip(' * ')
    return s

#
# main
#
if __name__ == "__main__":
    parser = optparse.OptionParser()
    parser.add_option("-r", "--release", dest="release", help="Ubuntu release", metavar="REL")
    (opt, args) = parser.parse_args()

    if not opt.release:
        print >>sys.stderr, 'Must specify -r'
        sys.exit(1)

    print get_dashboard_html(opt.release)
