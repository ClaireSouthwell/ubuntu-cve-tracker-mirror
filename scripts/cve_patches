#!/usr/bin/perl -w
#
# cve_packages
#

use strict;

my %debdiff;
my %vendor;
my %upstream;
my %patch;	# catchall
my %cves;
my %seen;

open CVES, "./scripts/ubuntu-table --supported |" or die;
my @table = <CVES>;	# read the whole file
close(CVES);

foreach my $row (@table) {
	$row =~ /^\s/ and next;
	my @parts = split(/\s+/, $row);
	my $cve = $parts[0];
	my $pkgname;

	my $in_patches = 0;

	exists($seen{$cve}) and next;	# skip CVE files we've looked at
	my $fn = "./active/$cve";
	-s $fn or $fn = "./embargoed/$cve";
	open CVE, $fn or (warn "Couldn't open '$fn'\n" and next);
	
	my $count = 0;
	while (<CVE>) {
		my $line = $_;
		chomp($line);
		if (/^Patches_/) {
			my @tmp = split(/_/, $line);
			if (!$tmp[1]) {
				print STDERR "Malformed patch line '$line'\n";
				next;
			}
			$pkgname = $tmp[1];
			$pkgname =~ s/://;
			$in_patches = 1;
			next;
		}
		$in_patches or next;
		if ($line !~ /^\s+/) {
			$in_patches = 0;
			next;
		}

		if ($line =~ /^\s+debdiff:/) {
			$debdiff{$pkgname . "_" . $cve} .= "$line\n";
		} elsif ($line =~ /^\s+vendor:/) {
			$vendor{$pkgname . "_" . $cve} .= "$line\n";
		} elsif ($line =~ /^\s+upstream:/) {
			$upstream{$pkgname . "_" . $cve} .= "$line\n";
		} elsif ($line =~ /^\s+[a-z]+:/) {
			$patch{$pkgname . "_" . $cve} .= "$line\n";
		} else {
			# if get here, then have a malformed line
			print STDERR "Skipping $cve: $line \n";
			next;
		}
		$cves{$pkgname . "_" . $cve} = 1;
	}
	close(CVE);
	$seen{$cve} = 1;
}

foreach my $k (sort keys(%cves)) {
	my ($pkg, $cve) = split(/_/, $k);
	print "$pkg ($cve)\n";
	defined ($debdiff{$k}) and print "$debdiff{$k}";
	defined ($vendor{$k}) and print "$vendor{$k}";
	defined ($upstream{$k}) and print "$upstream{$k}";
	defined ($patch{$k}) and print "$patch{$k}";
	print "\n";
}


