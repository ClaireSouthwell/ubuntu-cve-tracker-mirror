#!/bin/bash
# Copyright (C) 2008-2010 Canonical, Ltd.
# Authors: Kees Cook <kees@ubuntu.com>
#          Jamie Strandboge <jamie@ubuntu.com>
# License: GPLv3
#
# This script pulls down all the supported architectures (those that would
# appear in a sis-generate-usn run) Releases and Packages files.
#
# TODO: perform GPG tests (we're only using this info for component
# matching)
set -e

renice 10 -p $$ >/dev/null
ionice -c 2 -n 7 -p $$

help() {
    cat <<EOM
Usage: packages_mirror [OPTIONS]

  -t    use timestamps (ie, don't update files if they have been updated within
        the last day)
  -f    when using timestamps, force updating the files
  -v    verbose output
EOM
}

use_timestamp="no"
force_timestamp="no"
verbosity_args="-q"

while getopts "hftv" opt
do
    case "$opt" in
        f) force_timestamp="yes";;
        t) use_timestamp="yes";;
        v) verbosity_args="";;
        h) help ; exit 0;;
        ?) help;;
    esac
done
shift $(($OPTIND - 1))

#server=se.archive.ubuntu.com
#server=us.archive.ubuntu.com
server=archive.ubuntu.com
ports=ports.ubuntu.com

outPath=$(python -c 'import configobj, os.path; print configobj.ConfigObj(os.path.expanduser("~/.ubuntu-cve-tracker.conf"))["packages_mirror"]')
if [ -z "$outPath" ]; then
    echo "'packages_mirror' not defined in ~/.ubuntu-cve-tracker.conf" >&2
    exit 1
fi
mkdir -p "$outPath"

debianPath=$(python -c 'import configobj, os.path; print configobj.ConfigObj(os.path.expanduser("~/.ubuntu-cve-tracker.conf"))["debian_mirror"]')
if [ -z "$debianPath" ]; then
    echo "'debian_mirror' not defined in ~/.ubuntu-cve-tracker.conf" >&2
    exit 1
fi
mkdir -p "$debianPath"

partnerPath=$(python -c 'import configobj, os.path; print configobj.ConfigObj(os.path.expanduser("~/.ubuntu-cve-tracker.conf"))["partner_mirror"]')
if [ -z "$partnerPath" ]; then
    echo "'partner_mirror' not defined in ~/.ubuntu-cve-tracker.conf" >&2
    exit 1
fi
mkdir -p "$partnerPath"

function spew_bin_lines()
{
    rel="$1"
    repo="$2"
    arch="$3"
    echo "dists/$rel/$repo/binary-$arch/Release"
    echo "dists/$rel/$repo/binary-$arch/Packages.bz2"
    echo "dists/$rel/$repo/debian-installer/binary-$arch/Packages.bz2"
}

function spew_src_lines()
{
    rel="$1"
    repo="$2"
    echo "dists/$rel/$repo/source/Release"
    echo "dists/$rel/$repo/source/Sources.bz2"
}

function gen_packages()
{
    release="$1"
    arches="$2"
    for rel in $release $release-updates $release-security $release-proposed
    do
        for repo in main restricted universe multiverse
        do
            for arch in $arches
            do
                spew_bin_lines $rel $repo $arch
            done
            spew_src_lines $rel $repo
        done
    done
}

function pull_packages()
{
    filelist="$1"
    url="$2"

    if [ "$verbosity_args" != "-q" ]; then
        echo "Fetching:"
        cat "$filelist"
    fi

    count=1
    num_tries=3
    while [ "$count" -le "$num_tries" ]; do
        # FIXME: how do I get both the return code and stdout into a variable?
        log=$(mktemp -t rsync-XXXXXX)
        set +e
        rsync -rlptq --files-from="$filelist" $url $outPath/ >"$log" 2>&1
        rc=$?

        # keep trying if not successful (23 is missing files)
        if [ $rc -eq 0 ] || [ $rc -eq 23 ]; then
            break
        fi
        count=$(( $count + 1 ))
        echo "Try: $count" >&2
    done
    set -e
    OUT=$(cat "$log" | egrep -v '(debian-installer|^rsync.*code 23)' || true)
    rm -f "$log" || true

    # Report errors, if any
    if [ -n "$OUT" ]; then
        echo "$OUT"
    fi

    # Some unknown error -- die
    if [ $rc -ne 0 ] && [ $rc -ne 23 ]; then
        return 1
    fi
    # Missing files (rc 23), die only if it's not a debian-installer path
    if [ $rc -eq 23 ] && [ -n "$OUT" ]; then
        return 1
    fi
    while read bz2
    do
        if ! $(echo "$bz2" | egrep -q 'bz2$'); then
            continue
        fi
        src="$outPath/$bz2"
        dest_dir=$(dirname "$src")
        dest_file=$(basename "$src" .bz2)
        dest="$dest_dir/$dest_file"

        # Skip missing files (debian-installer)
        if [ ! -r "$src" ]; then
            continue
        fi
        if [ ! -f "$dest" ] || [ "$src" -nt "$dest" ]; then
            bzcat "$src" > "$dest"
        fi
    done < <(cat "$filelist")
}

# do_use_timestamp() returns '0' if timestamp doesn't exist or has been modified
# yesterday or more.
function do_use_timestamp() {
    if [ "$use_timestamp" = "no" ] || [ "$force_timestamp" = "yes" ]; then
        return 0
    elif [ ! -e "$1" ]; then
        return 0
    else
        tmp=`find "$1" -mtime +0`
        if [ -n "$tmp" ]; then
            return 0
        fi
    fi
    echo "'$1' exists and was modified within the last day. Skipping." >&2
    return 1
}

timestamp="${outPath}.timestamp"
if do_use_timestamp "$timestamp" ; then
    pull=$(mktemp -t packages-XXXXXX)
    trap "rm -f $pull" EXIT HUP INT QUIT TERM

    # Sync Packages for non-ports supported arches
    gen_packages dapper   "amd64 i386 sparc powerpc" >> "$pull"
    gen_packages hardy    "amd64 i386"               >> "$pull"
    gen_packages jaunty   "amd64 i386"               >> "$pull"
    gen_packages karmic   "amd64 i386"               >> "$pull"
    gen_packages lucid    "amd64 i386"               >> "$pull"
    gen_packages maverick "amd64 i386"               >> "$pull"

    pull_packages "$pull" rsync://$server/ubuntu || echo "FAIL: supported architectures" >&2
    cat /dev/null > "$pull"

    # Sync Packages for ports arches
    gen_packages dapper   "ia64 hppa"                    >> "$pull"
    gen_packages hardy    "lpia powerpc hppa sparc ia64" >> "$pull"
    gen_packages jaunty   "lpia powerpc hppa sparc ia64 armel" >> "$pull"
    gen_packages karmic   "lpia powerpc sparc ia64 armel" >> "$pull"
    gen_packages lucid    "powerpc sparc ia64 armel" >> "$pull"
    gen_packages maverick "powerpc sparc ia64 armel" >> "$pull"

    pull_packages "$pull" rsync://$ports/ubuntu-ports || echo "FAIL: ports architectures" >&2
    cat /dev/null > "$pull"

    if [ "$use_timestamp" = "yes" ]; then
        touch "$timestamp"
    else
        rm -f "$timestamp"
    fi
fi

# Sync Sources from Debian testing
timestamp="${debianPath}.timestamp"
if do_use_timestamp "$timestamp" ; then
    cd "$debianPath"
    for i in main contrib non-free
    do
        wget $verbosity_args -N -R '*=*' -R 'Contents*' -X '/debian/dists/testing/*/source/Sources.diff' -np -r ftp://ftp.debian.org/debian/dists/testing/$i/source/
    done
    ln -sf ftp.debian.org/debian/dists dists

    if [ "$use_timestamp" = "yes" ]; then
        touch "$timestamp"
    else
        rm -f "$timestamp"
    fi
fi

# Sync Canonical Partner Repo
timestamp="${partnerPath}.timestamp"
if do_use_timestamp "$timestamp" ; then
    cd "$partnerPath"
    wget $verbosity_args -N -R '*=*' -R 'Contents*' -np -r http://archive.canonical.com/dists
    ln -sf archive.canonical.com/dists dists

    if [ "$use_timestamp" = "yes" ]; then
        touch "$timestamp"
    else
        rm -f "$timestamp"
    fi
fi
