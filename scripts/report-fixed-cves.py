#!/usr/bin/python
# Author: Kees Cook <kees@ubuntu.com>
# Copyright (C) 2011 Canonical Ltd.
#
# Reports CVE counts fixed for each USN.
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 3 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.
#
# Fetch the USN database first. Override location with --database
#  wget http://people.canonical.com/~ubuntu-security/usn/database.pickle
#
import cPickle, sys, os, os.path, optparse, usn_lib
from source_map import version_compare

parser = optparse.OptionParser()
parser.add_option("-v", "--verbose", dest="verbose", help="Report specific CVEs", action='store_true')
parser.add_option("-D", "--database", help="Specify location of USN data (default 'database.pickle')", default="database.pickle")
parser.add_option("-R", "--reverted", help="Specify location of reverted CVE list (default 'reverted-CVEs.txt')", default="reverted-CVEs.txt")
parser.add_option("-d", "--debug", dest="debug", help="Report additional debugging while processing USNs", action='store_true')
(opt, args) = parser.parse_args()

reverted = usn_lib.get_reverted(opt.reverted)
db       = usn_lib.load_database(opt.database)

for usn in sorted(db, cmp=version_compare):
    # This USN is ancient and lacks any CVE information
    if not db[usn].has_key('cves'):
        if (opt.debug):
            print "%s lacks CVEs" % (usn)
        continue

    print "USN-%s: %d" % (usn, len(db[usn]['cves']))
    if opt.verbose:
        for cve in sorted(db[usn]['cves']):
            print "\t" + cve
