For these scripts to sucessfully load data into prometheus or Influx for the
KPIs, the system has to be connected to the Canonical VPN. Most of the work
interfacing with Influx / Prometheus is in common.sh. Some scripts push data
for multiple days - they do this by first querying Influx for the timestamp of
the most recent data point (ie the last time that script was run) and then
generates data for the intervening days.

common.sh also defines common variables for the current supported releases etc
($RELEASES) so that when a new release is needed to be tracked, these variables
can simply be updated and statistics for that new release should automatically
be generated.

Also the various passwords need to be supplied via ~/.ubuntu-security-tools.conf:

ubuntu_hardened_admin_password="XXXXX"
ubuntu_security_announce_admin_password="XXXXX"
influxdb_security_password="XXXXX"

The main script to run is update.sh (this should be run every 24 hours) - this
will in turn run the following scripts:

push-published-usns.sh
----------------------

Uses UCT/scripts/report-fixed-cves.py and pushes the number of USNs published
for each release AND the number of CVEs covered by those USNs since the last
time it was run.


push-historic-cve-triage.sh
---------------------------

Uses git repository history to look for newly added CVEs to push the numbers of
CVEs triaged since the last time ti was run.


push-cve-backlog.sh
-------------------

Uses UCT/scripts/report-todo-plot and pushes the number of outstanding CVEs for
each priority level.


push-mailing-list-subscribers.sh
--------------------------------

Uses ./get-total-mailman-subscribers.sh and pushes the current number of
subscribers for ubuntu-hardened and ubuntu-security-announce to influx.


push-package-count.sh
---------------------

Uses UCT/scripts/report-packages.py and pushes the number of source package
updates for each release to influx.


push-package-cve-count.sh
-------------------------

Uses UCT/scripts/report-packages.py and pushes the names of the top 15 packages
with the most fixed CVEs for each release to prometheus.


push-sponsor-todo.sh
--------------------

Uses UCT/scripts/report-todo-sponsoring and pushes the current number of
launchpad bugs with debdiffs attached and hence available to be sponsored by
the security team to influx.


push-mir-count.sh
-----------------

Uses UCT/scripts/report-todo-mir and pushes the current number of launchpad
bugs for MIRs which are assigned to the security team for review to influx.


push-supported-count.sh
-----------------------

Counts the number of packages listed in Packages.gz and the number of source
packages listed in Sources.gz in the local repo mirror and pushes these to
prometheus as the current number of binary and source packages respectively to
Prometheus.


push-usn-count.sh
-----------------

Uses usn.py from usn-tool to list the number of USNs published each month and
pushes these to influx AND Prometheus since we currently have separate
visualisations for data from both sources.


push-esm-package-count.sh
-------------------------

Uses UCT/scripts/report-released-packages to get the total number of packages
marked as released-esm, as well as those pushed to the esm PPA or those pushed
to the archive and and pushes these numbers to influx.
