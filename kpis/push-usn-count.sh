#!/bin/bash

# Copyright (C) 2018 Canonical Ltd.
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 2 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.

# Sends the number of USNs published per month to influx for the KPIs
set -e

. "$HOME"/.ubuntu-cve-tracker.conf

echo "Checking we can resolve influxdb hostname..."
nslookup influxdb.security.kpi.internal 1>/dev/null 2>&1 || (echo "Unable to resolve host influxdb.security.kpi.internal - you must be connected to the Canonical VPN to use this script." && exit 1)

PASSWORD=${influxdb_security_password}
while [ -z "$PASSWORD" ]; do
  echo -n "Enter password for user 'security' influxdb: "
  read -r -s PASSWORD
  # newline after password
  echo ""
done

pushd "${UCT:-/home/ubuntu-security/git-pulls/cve-tracker}"
./scripts/fetch-db database.pickle

export PATH=$PATH:${USN:-/home/ubuntu-security/bzr-pulls/usn-tool}
umask 0002
usn.py --db database.pickle --list-graph | while read -r when count; do
  year=$(echo "$when" | cut -f1 -d"-")
  month=$(echo "$when" | cut -f2 -d"-")

  # this year / month is the count for all of the month in that year - so
  # generate a timestamp for influx which is the start of the very next month
  # to carry this value
  # ensure month is not interpreted as octal
  month=$((10#$month+1))
  if [ $month -gt 12 ]; then
    month=01
    year=$((year+1))
  fi
  month=$(printf "%02d" $month)
  timestamp=$(date -d "${year}-${month}-01" +%s)

  DATA="published_usns_monthly usns=$count $timestamp"
  echo "Pushing \"$DATA\" for $when to Influx..."
  RESPONSE=$(http_proxy=; curl -s -o /dev/null -w "%{http_code}" -i -XPOST "http://influxdb.security.kpi.internal:8086/write?db=security&u=security&p=$PASSWORD;precision=s" --data-binary "$DATA")
  if [ "$RESPONSE" != 204 ]; then
    echo "Failed to push data: $RESPONSE"
    exit 1
  fi
done
popd
