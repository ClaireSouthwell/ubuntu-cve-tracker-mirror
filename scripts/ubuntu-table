#!/usr/bin/env python
import os, re, sys

releases = ['dapper', 'edgy', 'feisty', 'devel']

table = dict()
cves = [elem for elem in os.listdir('.') if re.match('^CVE-\d+-\d+$',elem)]
for cve in cves:
    table.setdefault(cve, dict())
    text = file(cve).read()
    for status in re.finditer('^([^\n_]+)_([^:]+):[ \t]*([^ \n]*)', text, re.MULTILINE):
        rel = status.group(1)
        pkg = status.group(2)
        state = status.group(3)
        #print '> %s %s %s' % (rel, pkg, state)
        table[cve].setdefault(pkg,dict())
        table[cve][pkg].setdefault(rel,"needs triage")
        if state != '':
            table[cve][pkg][rel] = state

format = '%15s'
print '               ',
for rel in releases:
    print format % rel,
print

for cve in cves:
    print cve
    if not table.has_key(cve):
        print ' NEEDS PACKAGE TRIAGE'
        continue
    action_needed = False
    for pkg, state in table[cve].iteritems():
        nodisplay = 1
        ignored = 1
        needed = 0
        released = 0
        for rel in releases:
            if not table[cve][pkg].has_key(rel):
                table[cve][pkg].setdefault(rel,'-unlisted-')
    
            if table[cve][pkg][rel] != 'N/A' and table[cve][pkg][rel] != 'released' and table[cve][pkg][rel] != '-unlisted-':
                nodisplay = 0
            if table[cve][pkg][rel] != 'ignored':
                ignored = 0
            if table[cve][pkg][rel] == 'needed' or table[cve][pkg][rel] == 'deferred':
                needed = 1
                action_needed = 1
            if table[cve][pkg][rel] == 'released':
                released = 1
            if table[cve][pkg][rel] == 'needs triage':
                action_needed = 1
    
        if not nodisplay and not ignored:
            print ' %12s: ' % (pkg), 
            for rel in releases:
                print format % table[cve][pkg][rel],
            if needed and released:
                print ' [out of sync]',
            print

    if not action_needed:
        print >>sys.stderr, 'retire: %s' % (cve)
