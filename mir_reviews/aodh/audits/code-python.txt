Running: /home/sarnold/bin/audit-code.sh -c python ./
Scanning './'
== subprocess_spawned() ==
./aodh/tests/unit/test_bin.py:47:        subp = subprocess.Popen(['aodh-dbsync',
./aodh/tests/unit/test_bin.py:52:        subp = subprocess.Popen(['aodh-expirer',
./aodh/tests/unit/test_bin.py:72:        subp = subprocess.Popen(['aodh-expirer',
./aodh/tests/unit/test_bin.py:134:            return subprocess.Popen(['aodh-api',
./aodh/tests/unit/test_bin.py:138:            return subprocess.Popen(['aodh-api',
./aodh/tests/unit/test_bin.py:187:        self.subp = subprocess.Popen(['aodh-evaluator',
./aodh/tests/unit/test_bin.py:195:        self.subp = subprocess.Popen(['aodh-notifier',
./doc/source/conf.py:157:#html_last_updated_fmt = subprocess.Popen(git_cmd,

== memory_management() ==
(unsupported type 'python')

== files() ==
./aodh/tests/functional/storage/test_impl_hbase.py:45:            def open(self):
./aodh/storage/hbase/inmemory.py:268:    def open():

== logging() ==
./aodh/tests/functional/api/test_app.py:42:    def test_pecan_debug(self, mocked):
./aodh/tests/functional/api/test_app.py:43:        def _check_pecan_debug(g_debug, p_debug, expected, workers=1):
./aodh/tests/functional/api/test_app.py:52:        _check_pecan_debug(g_debug=False, p_debug=None, expected=False)
./aodh/tests/functional/api/test_app.py:53:        _check_pecan_debug(g_debug=True, p_debug=None, expected=False)
./aodh/tests/functional/api/test_app.py:54:        _check_pecan_debug(g_debug=True, p_debug=False, expected=False)
./aodh/tests/functional/api/test_app.py:55:        _check_pecan_debug(g_debug=False, p_debug=True, expected=True)
./aodh/tests/functional/api/test_app.py:56:        _check_pecan_debug(g_debug=True, p_debug=None, expected=False,
./aodh/tests/functional/api/test_app.py:58:        _check_pecan_debug(g_debug=False, p_debug=True, expected=False,
./aodh/tests/functional/api/v2/test_app.py:152:    def test_translated_then_untranslated_error(self):
./aodh/tests/functional/api/v2/test_query.py:137:    def test_get_value_as_type_with_syntax_error(self):
./aodh/cmd/storage.py:36:        LOG.debug("Clearing expired alarm history data")
./aodh/hacking/checks.py:51:    """Check for 'LOG.debug(_('
./aodh/hacking/checks.py:63:    if logical_line.startswith("LOG.debug(_("):
./aodh/storage/impl_hbase.py:82:        LOG.debug('Dropping HBase schema...')
./aodh/storage/impl_hbase.py:89:                    LOG.debug('Cannot disable table but ignoring error')
./aodh/storage/impl_hbase.py:93:                    LOG.debug('Cannot delete table but ignoring error')
./aodh/storage/impl_mongodb.py:109:        LOG.debug("Clearing expired alarm history data is based on native "
./aodh/storage/__init__.py:62:        warnings.warn(msg)
./aodh/storage/__init__.py:63:    LOG.debug('looking for %(name)r driver in %(namespace)r',
./aodh/storage/hbase/inmemory.py:269:        LOG.debug("Opening in-memory HBase connection")
./aodh/storage/hbase/base.py:36:                LOG.debug('Creating a new in-memory HBase Connection object')
./aodh/storage/hbase/base.py:52:        LOG.debug('connecting to HBase on %(host)s:%(port)s',
./aodh/api/middleware.py:102:                    LOG.error(_('Error parsing HTTP response: %s'), err)
./aodh/api/controllers/v2/alarms.py:180:LOG.debug("alarm rules plugin loaded: %s" % ",".join(ALARMS_RULES.names()))
./aodh/notifier/zaqar.py:53:            LOG.error(_LE("Aodh was configured to use zaqar:// action,"
./aodh/notifier/zaqar.py:76:            LOG.error(_LE("Failed to connect to Zaqar service "),
./aodh/notifier/zaqar.py:124:            LOG.error(_LE("Required topic query option missing in action %s")
./aodh/notifier/zaqar.py:127:            LOG.error(_LE("Unknown error occurred; Failed to post message to"
./aodh/notifier/__init__.py:126:        LOG.error(
./aodh/notifier/__init__.py:135:        LOG.error(
./aodh/notifier/__init__.py:142:        LOG.debug("Notifying alarm %(id)s with action %(act)s",
./aodh/notifier/__init__.py:160:        LOG.error(_("Unable to notify for an alarm with no action"))
./aodh/evaluator/gnocchi.py:52:        LOG.debug('sanitize stats %s', statistics)
./aodh/evaluator/gnocchi.py:56:        LOG.debug('pruned statistics to %d', len(statistics))
./aodh/evaluator/composite.py:44:            LOG.debug('Evaluating %(type)s rule: %(rule)s',
./aodh/evaluator/composite.py:209:            LOG.debug('Attempted to evaluate alarm %s, but it is not '
./aodh/evaluator/composite.py:213:        LOG.debug("Evaluating composite rule alarm %s ...", alarm.alarm_id)
./aodh/evaluator/composite.py:236:                LOG.debug(reason)
./aodh/evaluator/event.py:78:            LOG.error(_LE('Received invalid event (empty or None)'))
./aodh/evaluator/event.py:82:            LOG.error(_LE('Failed to extract event_type from event = %s'),
./aodh/evaluator/event.py:87:            LOG.error(_LE('Failed to extract message_id from event = %s'),
./aodh/evaluator/event.py:163:        LOG.debug('Starting event alarm evaluation: #events = %d',
./aodh/evaluator/event.py:166:            LOG.debug('Evaluating event: event = %s', e)
./aodh/evaluator/event.py:170:                LOG.debug('Aborting evaluation of the event.')
./aodh/evaluator/event.py:182:        LOG.debug('Finished event alarm evaluation.')
./aodh/evaluator/event.py:219:        LOG.debug('Evaluating alarm (id=%(a)s) triggered by event '
./aodh/evaluator/event.py:223:            LOG.debug('Skip evaluation of the alarm id=%s which have already '
./aodh/evaluator/event.py:228:            LOG.debug('Aborting evaluation of the alarm (id=%s) since '
./aodh/evaluator/event.py:234:            LOG.debug('Comparing value=%(v)s against condition=%(c)s .',
./aodh/evaluator/event.py:240:                LOG.debug('Aborting evaluation of the alarm due to '
./aodh/evaluator/threshold.py:78:        LOG.debug('query stats from %(start)s to '
./aodh/evaluator/threshold.py:85:        LOG.debug('sanitize stats %s', statistics)
./aodh/evaluator/threshold.py:94:                LOG.debug('excluded weak datapoints with sample counts %s',
./aodh/evaluator/threshold.py:98:                LOG.debug('no excluded weak datapoints')
./aodh/evaluator/threshold.py:105:        LOG.debug('pruned statistics to %d', len(statistics))
./aodh/evaluator/threshold.py:114:        LOG.debug('stats query %s', query)
./aodh/evaluator/threshold.py:164:            LOG.debug('comparing value %(value)s against threshold'
./aodh/evaluator/threshold.py:215:            LOG.debug('Attempted to evaluate alarm %s, but it is not '
./aodh/evaluator/__init__.py:218:            LOG.debug('skipping alarm %s: type unsupported', alarm.alarm_id)
./aodh/evaluator/__init__.py:221:        LOG.debug('evaluating alarm %s', alarm.alarm_id)
./aodh/evaluator/combination.py:39:            LOG.error(_LE("alarm %s doesn't exists anymore"), alarm_id)
./aodh/evaluator/combination.py:107:            LOG.debug('Attempted to evaluate alarm %s, but it is not '
./aodh/queue.py:43:            LOG.debug('alarm %(alarm_id)s has no action configured '
./aodh/coordination.py:200:            LOG.debug('Members of group: %s', members)
./aodh/coordination.py:204:            LOG.debug('My subset: %s', filtered)
./aodh/rpc.py:44:            LOG.debug('alarm %(alarm_id)s has no action configured '

== environment() ==
./aodh/tests/functional/db.py:87:            os.getenv("AODH_TEST_HBASE_TABLE_PREFIX", "test")
./aodh/tests/functional/gabbi/test_gabbi_live.py:34:    aodh_url = os.getenv('AODH_SERVICE_URL')
./aodh/tests/functional/gabbi/test_gabbi_live.py:52:    elif os.getenv('GABBI_LIVE_FAIL_IF_NO_TEST'):
./aodh/tests/mocks.py:27:        prefix = os.getenv("AODH_TEST_HBASE_TABLE_PREFIX", 'test')
./tools/test_hbase_table_utils.py:23:    if os.getenv("AODH_TEST_STORAGE_URL"):
./tools/test_hbase_table_utils.py:25:               (os.getenv("AODH_TEST_STORAGE_URL"),
./tools/test_hbase_table_utils.py:26:                os.getenv("AODH_TEST_HBASE_TABLE_PREFIX", "test")))
./doc/source/conf.py:57:if os.getenv('HUDSON_PUBLISH_DOCS'):

== privileged() ==

== networking() ==
./aodh/tests/unit/test_coordination.py:228:    def test_reconnect(self, mock_info, mocked_exception):
./aodh/tests/functional/db.py:54:        self._conn = self._engine.connect()
./aodh/storage/mongo/utils.py:62:    def connect(self, url, max_retries, retry_interval):
./aodh/storage/impl_mongodb.py:44:        self.conn = self.CONNECTION_POOL.connect(
./aodh/storage/sqlalchemy/alembic/env.py:75:    with connectable.connect() as connection:
./aodh/storage/sqlalchemy/alembic/env.py:83:    conn.disconnect()
./aodh/storage/impl_sqlalchemy.py:72:    def disconnect(self):
./aodh/storage/impl_sqlalchemy.py:89:            ctxt = migration.MigrationContext.configure(engine.connect())
./aodh/api/app.py:24:from werkzeug import serving

== http:// ==
./aodh/tests/constants.py:7:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/tempest/config.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/tempest/service/client.py:8:#         http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/tempest/api/test_alarming_api.py:5:#         http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/tempest/api/test_alarming_api_negative.py:7:#         http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/tempest/api/base.py:5:#         http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/tempest/plugin.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/test_bin.py:9:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/test_bin.py:114:        url = 'http://%s:%d/%s' % ('127.0.0.1', self.api_port, path)
./aodh/tests/unit/test_api_v2_capabilities.py:5:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/evaluator/test_gnocchi.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/evaluator/test_composite.py:6:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/evaluator/test_base.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/evaluator/test_combination.py:10:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/evaluator/test_threshold.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/evaluator/test_event.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/evaluator/base.py:9:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/test_storage.py:5:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/test_coordination.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/test_messaging.py:7:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/test_evaluator.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/test_notifier.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/test_notifier.py:127:        action = 'http://host/action'
./aodh/tests/unit/test_notifier.py:246:        action = 'trust+http://trust-1234@host/action'
./aodh/tests/unit/test_notifier.py:247:        url = 'http://host/action'
./aodh/tests/unit/test_notifier.py:269:        action = 'zaqar://?topic=critical&subscriber=http://example.com/data' \
./aodh/tests/unit/test_notifier.py:289:        subscribers = ['http://example.com/data', 'mailto:foo@example.com']
./aodh/tests/unit/test_rpc.py:10:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/unit/test_rpc.py:65:                'ok_actions': ['http://host:8080/path'],
./aodh/tests/unit/test_rpc.py:82:                'insufficient_data_actions': ['http://other_host/path'],
./aodh/tests/unit/test_event.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/storage/test_impl_mongodb.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/storage/test_impl_hbase.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/storage/sqlalchemy/test_models.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/storage/sqlalchemy/test_migrations.py:8:#         http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/storage/test_get_connection.py:9:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/storage/test_impl_sqlalchemy.py:5:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/storage/test_storage_scenarios.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/storage/test_storage_scenarios.py:60:                                     alarm_actions=['http://nowhere/alarms'],
./aodh/tests/functional/storage/test_storage_scenarios.py:89:                                     alarm_actions=['http://nowhere/alarms'],
./aodh/tests/functional/storage/test_storage_scenarios.py:116:                                     alarm_actions=['http://nowhere/alarms'],
./aodh/tests/functional/storage/test_impl_log.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/api/test_app.py:8:#         http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/api/test_versions.py:7:#    http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/api/test_versions.py:29:    'href': 'http://docs.openstack.org/',
./aodh/tests/functional/api/test_versions.py:39:            'href': 'http://localhost/v2',
./aodh/tests/functional/api/v2/test_app.py:9:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/api/v2/test_query.py:9:#         http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/api/v2/test_acl_scenarios.py:9:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:785:                alarm_actions=['http://[::1'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:786:                error_message='Unable to parse action http://[::1')
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:825:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:826:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:827:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:855:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:856:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:857:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:903:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:904:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:905:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1092:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1181:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1182:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1183:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1212:            'alarm_actions': ['http://no.where', 'http://no.where']
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1219:        self.assertEqual(['http://no.where'], alarms[0].alarm_actions)
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1229:            'alarm_actions': ['http://no.where', 'http://no.where2']
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1315:            'ok_actions': ['trust+http://my.server:1234/foo'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1343:                    ['trust+http://5678:delete@my.server:1234/foo'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1367:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1368:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1369:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1411:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1412:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1413:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1459:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1460:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1461:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1498:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1499:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1500:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1539:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1540:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1573:        data.update({'ok_actions': ['trust+http://something/ok']})
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1586:            ['trust+http://5678:delete@something/ok'], data['ok_actions'])
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1588:        data.update({'ok_actions': ['http://no-trust-something/ok']})
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1602:            ['http://no-trust-something/ok'], data['ok_actions'])
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2424:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2425:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2426:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2455:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2456:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2457:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2476:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2477:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2478:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2507:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2508:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2509:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2540:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2541:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2542:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2572:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2573:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2574:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2600:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2601:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2602:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2878:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2879:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2880:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2938:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2939:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2940:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2972:            'ok_actions': ['http://something/ok'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2973:            'alarm_actions': ['http://something/alarm'],
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2974:            'insufficient_data_actions': ['http://something/no'],
./aodh/tests/functional/api/v2/test_capabilities.py:10:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/api/v2/test_wsme_custom_type.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/api/v2/test_complex_query.py:11:#         http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/api/v2/__init__.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/api/v2/test_complex_query_scenarios.py:11:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/api/__init__.py:9:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/db.py:10:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/gabbi/test_gabbi.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/gabbi/test_gabbi_live.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/gabbi/fixtures.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/functional/gabbi/fixtures.py:112:            return "http://valid.example.com"
./aodh/tests/mocks.py:6:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/base.py:9:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/tests/test_hacking.py:7:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/i18n.py:7:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/i18n.py:17:See http://docs.openstack.org/developer/oslo.i18n/usage.html
./aodh/conf/defaults.py:7:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/cmd/api.py:10:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/cmd/storage.py:9:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/cmd/alarm.py:10:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/hacking/checks.py:7:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/impl_hbase.py:6:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/pymongo_base.py:11:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/pymongo_base.py:262:            'alarm_actions': ['http://nowhere/alarms'],
./aodh/storage/mongo/utils.py:9:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/models.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/impl_mongodb.py:14:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/sqlalchemy/utils.py:5:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/sqlalchemy/models.py:5:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/sqlalchemy/alembic/env.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/sqlalchemy/alembic/versions/bb07adac380_add_severity_to_alarm_history.py:7:#         http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/sqlalchemy/alembic/versions/12fe8fac9fe4_initial_base.py:7:#         http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/__init__.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/impl_sqlalchemy.py:5:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/impl_log.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/hbase/utils.py:6:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/hbase/migration.py:6:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/hbase/inmemory.py:6:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/hbase/base.py:6:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/storage/base.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/keystone_client.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/keystone_client.py:153:                                       'http://localhost:5000/v2.0'),
./aodh/event.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/rbac.py:10:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/app.py:9:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/app.py:99:            'serving on 0.0.0.0:%(sport)s, view at http://127.0.0.1:%(vport)s')
./aodh/api/app.py:102:        LOG.info(_("serving on http://%(host)s:%(port)s") % (
./aodh/api/__init__.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/middleware.py:9:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/controllers/v2/query.py:13:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/controllers/v2/utils.py:13:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/controllers/v2/utils.py:296:    # see: http://legacy.python.org/dev/peps/pep-3333/#unicode-issues
./aodh/api/controllers/v2/alarms.py:13:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/controllers/v2/alarms.py:362:                   ok_actions=["http://site:8000/ok"],
./aodh/api/controllers/v2/alarms.py:363:                   alarm_actions=["http://site:8000/alarm"],
./aodh/api/controllers/v2/alarms.py:364:                   insufficient_data_actions=["http://site:8000/nodata"],
./aodh/api/controllers/v2/root.py:13:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/controllers/v2/capabilities.py:13:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/controllers/v2/alarm_rules/gnocchi.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/controllers/v2/alarm_rules/composite.py:6:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/controllers/v2/alarm_rules/event.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/controllers/v2/alarm_rules/threshold.py:6:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/controllers/v2/alarm_rules/combination.py:6:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/controllers/v2/base.py:13:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/controllers/root.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/api/controllers/root.py:44:            {'href': 'http://docs.openstack.org/',
./aodh/api/hooks.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/service.py:10:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/notifier/zaqar.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/notifier/trust.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/notifier/trust.py:30:    The URL must be in the form trust+http://trust-id@host/action.
./aodh/notifier/log.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/notifier/__init__.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/notifier/rest.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/notifier/test.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/evaluator/gnocchi.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/evaluator/composite.py:6:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/evaluator/event.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/evaluator/threshold.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/evaluator/utils.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/evaluator/__init__.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/evaluator/combination.py:10:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/queue.py:6:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/__init__.py:9:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/opts.py:7:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/messaging.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./aodh/coordination.py:8:# http://www.apache.org/licenses/LICENSE-2.0
./aodh/rpc.py:8:#      http://www.apache.org/licenses/LICENSE-2.0
./tools/test_hbase_table_utils.py:5:#      http://www.apache.org/licenses/LICENSE-2.0
./rally-jobs/plugins/plugin_sample.py:5:#         http://www.apache.org/licenses/LICENSE-2.0
./setup.py:7:#    http://www.apache.org/licenses/LICENSE-2.0
./setup.py:21:# solution from: http://bugs.python.org/issue15881#msg170215
./releasenotes/source/conf.py:6:#    http://www.apache.org/licenses/LICENSE-2.0

== encryption ==
./aodh/tests/unit/test_notifier.py:139:        action = 'https://host/action'
./aodh/tests/unit/test_notifier.py:155:        action = 'https://host/action'
./aodh/tests/unit/test_notifier.py:173:        action = 'https://host/action'
./aodh/tests/unit/test_notifier.py:188:        action = 'https://host/action?aodh-alarm-ssl-verify=0'
./aodh/tests/unit/test_notifier.py:201:        action = 'https://host/action?aodh-alarm-ssl-verify=1'
./aodh/tests/functional/gabbi/test_gabbi_live.py:42:        # https://github.com/cdent/gabbi/issues/50
./aodh/conf/defaults.py:22:    # TODO(krotscheck): Update with https://review.openstack.org/#/c/285368/
./aodh/hacking/checks.py:54:    https://wiki.openstack.org/wiki/LoggingStandards#Log_Translation
./aodh/api/controllers/v2/alarms.py:672:        # Workaround for https://bugs.launchpad.net/wsme/+bug/1227229
./aodh/api/controllers/v2/alarm_rules/threshold.py:67:        # workaround for https://bugs.launchpad.net/wsme/+bug/1227039
./aodh/evaluator/gnocchi.py:94:        #   https://bugs.launchpad.net/gnocchi/+bug/1479429
./rally-jobs/plugins/plugin_sample.py:18:About plugins: https://rally.readthedocs.org/en/latest/plugins.html
./rally-jobs/plugins/plugin_sample.py:20:Rally concepts https://wiki.openstack.org/wiki/Rally/Concepts

== sql() ==
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:2235:    def test_post_invalid_alarm_query(self):
./aodh/tests/functional/db.py:72:        conn.execute('CREATE DATABASE %s WITH TEMPLATE template0;' % db_name)
./aodh/tests/functional/db.py:80:        conn.execute('CREATE DATABASE %s;' % db_name)
./aodh/storage/impl_hbase.py:117:            q = hbase_utils.make_query(alarm_id=alarm_id)
./aodh/storage/impl_hbase.py:130:        q = hbase_utils.make_query(alarm_id=alarm_id, name=name,
./aodh/storage/impl_hbase.py:152:        q = hbase_utils.make_query(alarm_id=alarm_id,
./aodh/storage/impl_hbase.py:156:        start_row, end_row = hbase_utils.make_timestamp_query(
./aodh/storage/pymongo_base.py:147:        :param on_behalf_of: ID of tenant to scope changes query (None for
./aodh/storage/sqlalchemy/utils.py:96:    def get_query(self):
./aodh/storage/sqlalchemy/alembic/env.py:52:    Calls to context.execute() here emit the given string to the
./aodh/storage/impl_sqlalchemy.py:100:            engine.execute(table.delete())
./aodh/storage/impl_sqlalchemy.py:109:        query = session.query(table)
./aodh/storage/impl_sqlalchemy.py:120:        return retrieve[table](transformer.get_query())
./aodh/storage/impl_sqlalchemy.py:164:        query = session.query(models.Alarm)
./aodh/storage/impl_sqlalchemy.py:228:            session.query(models.Alarm).filter(
./aodh/storage/impl_sqlalchemy.py:231:            session.query(models.AlarmChange).filter(
./aodh/storage/impl_sqlalchemy.py:277:        :param on_behalf_of: ID of tenant to scope changes query (None for
./aodh/storage/impl_sqlalchemy.py:289:        query = session.query(models.AlarmChange)
./aodh/storage/impl_sqlalchemy.py:342:            deleted_rows = (session.query(models.AlarmChange)
./aodh/storage/hbase/utils.py:55:def make_timestamp_query(func, start=None, start_op=None, end=None,
./aodh/storage/hbase/utils.py:99:def make_query(**kwargs):
./aodh/storage/base.py:170:        :param on_behalf_of: ID of tenant to scope changes query (None for
./aodh/api/controllers/v2/utils.py:55:def sanitize_query(query, db_func, on_behalf_of=None):
./aodh/api/controllers/v2/utils.py:93:def validate_query(query, db_func, internal_keys=None,
./aodh/api/controllers/v2/utils.py:216:    validate_query(query, db_func, internal_keys=internal_keys,
./aodh/api/controllers/v2/utils.py:218:    query = sanitize_query(query, db_func)
./aodh/api/controllers/v2/alarm_rules/threshold.py:75:        v2_utils.validate_query(threshold_rule.query,
./aodh/api/controllers/v2/alarm_rules/threshold.py:84:        alarm.threshold_rule.query = v2_utils.sanitize_query(
./aodh/evaluator/event.py:129:        self._parse_query()
./aodh/evaluator/event.py:131:    def _parse_query(self):
./aodh/tests/functional/storage/sqlalchemy/test_models.py:20:import sqlalchemy
./aodh/tests/functional/storage/sqlalchemy/test_models.py:21:from sqlalchemy.dialects.mysql import DECIMAL
./aodh/tests/functional/storage/sqlalchemy/test_models.py:22:from sqlalchemy.types import NUMERIC
./aodh/tests/functional/storage/sqlalchemy/test_models.py:24:from aodh.storage.sqlalchemy import models
./aodh/tests/functional/storage/sqlalchemy/test_migrations.py:18:from oslo_db.sqlalchemy import test_migrations
./aodh/tests/functional/storage/sqlalchemy/test_migrations.py:21:from aodh.storage.sqlalchemy import models
./aodh/tests/functional/storage/test_impl_sqlalchemy.py:21:from aodh.storage import impl_sqlalchemy as impl_sqla_alarm
./aodh/tests/functional/db.py:52:        import sqlalchemy
./aodh/storage/sqlalchemy/utils.py:16:from sqlalchemy import and_
./aodh/storage/sqlalchemy/utils.py:17:from sqlalchemy import asc
./aodh/storage/sqlalchemy/utils.py:18:from sqlalchemy import desc
./aodh/storage/sqlalchemy/utils.py:19:from sqlalchemy import not_
./aodh/storage/sqlalchemy/utils.py:20:from sqlalchemy import or_
./aodh/storage/sqlalchemy/models.py:24:from sqlalchemy import Column, String, Index, Boolean, Text, DateTime
./aodh/storage/sqlalchemy/models.py:25:from sqlalchemy.dialects.mysql import DECIMAL
./aodh/storage/sqlalchemy/models.py:26:from sqlalchemy.ext.declarative import declarative_base
./aodh/storage/sqlalchemy/models.py:27:from sqlalchemy.types import TypeDecorator
./aodh/storage/sqlalchemy/alembic/env.py:20:from aodh.storage import impl_sqlalchemy
./aodh/storage/sqlalchemy/alembic/env.py:21:from aodh.storage.sqlalchemy import models
./aodh/storage/sqlalchemy/alembic/versions/bb07adac380_add_severity_to_alarm_history.py:31:import sqlalchemy as sa
./aodh/storage/sqlalchemy/alembic/versions/12fe8fac9fe4_initial_base.py:31:import sqlalchemy as sa
./aodh/storage/sqlalchemy/alembic/versions/12fe8fac9fe4_initial_base.py:33:import aodh.storage.sqlalchemy.models
./aodh/storage/impl_sqlalchemy.py:22:from oslo_db.sqlalchemy import session as db_session
./aodh/storage/impl_sqlalchemy.py:26:from sqlalchemy import desc
./aodh/storage/impl_sqlalchemy.py:32:from aodh.storage.sqlalchemy import models
./aodh/storage/impl_sqlalchemy.py:33:from aodh.storage.sqlalchemy import utils as sql_utils

== tmp() ==

== priv_cmds (sudo, gksu, pkexec) ==

== envvars() ==

== webkit() ==

== comments (XXX, FIXME, TODO) ==
./aodh/tests/functional/api/v2/test_alarm_scenarios.py:1303:        # FIXME(sileht): This should really returns [] not None
./aodh/tests/functional/gabbi/fixtures.py:33:# TODO(chdent): For now only MongoDB is supported, because of easy
./aodh/conf/defaults.py:22:    # TODO(krotscheck): Update with https://review.openstack.org/#/c/285368/
./aodh/hacking/checks.py:32:# TODO(zqfan): When other oslo libraries switch over non-namespace'd
./aodh/storage/impl_sqlalchemy.py:188:        # TODO(cmart): improve this by using sqlalchemy.func factory
./aodh/storage/impl_sqlalchemy.py:230:            # FIXME(liusheng): we should use delete cascade
./aodh/storage/hbase/inmemory.py:100:            # TODO(jdanjou): we should really parse this properly,
./aodh/event.py:38:        # TODO(r-mibu): requeue on error
./aodh/api/rbac.py:57:    # TODO(sileht): add deprecation warning to be able to remove this:
./aodh/api/rbac.py:69:# TODO(fabiog): these methods are still used because the scoping part is really
./aodh/api/rbac.py:81:    # TODO(sileht): Only filtering on role work currently for segregation
./aodh/api/app.py:47:    # FIXME: Replace DBHook with a hooks.TransactionHook
./aodh/api/controllers/v2/alarms.py:489:    # FIXME(sileht): perhaps we need to copy some infos from the
./aodh/api/controllers/v2/alarms.py:516:        # TODO(sileht): We should be able to relax this since we
./aodh/api/controllers/v2/alarm_rules/threshold.py:32:    # FIXME(sileht): default doesn't work
./aodh/notifier/rest.py:96:        # FIXME(rhonjo): Retries are automatically done by urllib3 in requests
./aodh/evaluator/gnocchi.py:47:        # TODO(sileht): if there's no direct match, but there is an archive
./aodh/evaluator/gnocchi.py:51:        # TODO(sileht): support alarm['exclude_outliers']
./aodh/evaluator/gnocchi.py:87:        # FIXME(sileht): In case of a heat autoscaling stack decide to
./aodh/evaluator/event.py:192:        # TODO(r-mibu): Implement "changes-since" at the storage API and make
./aodh/evaluator/event.py:268:    # TODO(r-mibu): Change the base (common) class design for evaluators.
./aodh/__init__.py:19:    # FIXME(jd) This is used by WSME to return a correct HTTP code. We should

== unsafe input mechanisms ==
(unsupported type 'python')

