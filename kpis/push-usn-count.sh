#!/bin/bash

# Copyright (C) 2018 Canonical Ltd.
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 2 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.

# Sends the number of USNs published per month to both prometheus and influx
# for the KPIs
set -e

# shellcheck source=common.sh
. "$(dirname "${BASH_SOURCE[0]}")/common.sh"

pushd "${UCT:-/home/ubuntu-security/git-pulls/cve-tracker}"
./scripts/fetch-db database.pickle 1>/dev/null 2>&1

export PATH=$PATH:${USN:-/home/ubuntu-security/bzr-pulls/usn-tool}
umask 0002
usn.py --db database.pickle --list-graph | while read -r when count; do
  year=$(echo "$when" | cut -f1 -d"-")
  month=$(echo "$when" | cut -f2 -d"-")

  # push to prometheus with labels for each time point and push to influx with
  # timestamps for each time since is useful to visualise in both ways
  label=$month
  # Hacking the date format because the graph gets to be unreadable in Grafana.
  # This way the year just gets published once which slightly improves
  # readability when looks like 2017-12 instance looks like 12 unless it is
  # January then it is 2018-01
  if [[ $month == "01" ]]; then
    label=$when
  fi
  DATA="security_usn_publications_monthly{label=\"$label\"} $count"
  JOB="security_usn_job/instance/$when"
  push_to_prometheus "$DATA" "$JOB"

  # this year / month is the count for all of the month in that year - so
  # generate a timestamp for influx which is the start of the very next month
  # to carry this value
  # ensure month is not interpreted as octal
  month=$((10#$month+1))
  if [ $month -gt 12 ]; then
    month=01
    year=$((year+1))
  fi
  month=$(printf "%02d" $month)
  timestamp=$(date -d "${year}-${month}-01" +%s)

  DATA="published_usns_monthly usns=$count"
  push_to_influx "$DATA" "$timestamp"
done
popd
